{"version":3,"sources":["redux/Store.js","redux/fetchUrl.js","components/List_Main.js","components/Loading.js","components/List_Invoices.js","Arrays/Filters.js","components/ButtonReqSpinner.js","Arrays/Options.js","New-Invoice-Template.js","components/CreateOrEdit.js","components/Header.js","components/ErrorModal.js","components/Viewer.js","components/DeleteModal.js","App.js","reportWebVitals.js","index.js","Arrays/Months.js"],"names":["httpStatusAndReset","res","SETHTTPRES","console","log","setTimeout","a","storedInvoices","JSON","parse","localStorage","getItem","length","INITINVOICES","fetch","catch","err","undefined","json","data","forEach","list","idAssign","items","item","id","fetchInvoices","addReq","store","invoice","status","updateState","push","localData","stringify","setItem","addDraftReq","concat","paidUpdateReq","filter","map","updReq","delReq","createReduxModule","SAVEANDSENDINVOICE","saveSendInvoice","SAVEASDRAFTINVOICE","draftInvoice","MARKASPAIDINVOICE","markPaidInvoice","SAVECHANGESINVOICE","saveChangeInvoice","DELETEINVOICE","delInvoice","INVOICELIST","SETINVOICE","INVOICE","TOGGLENIGHTMODE","toggle","NIGHTMODE","SETTOGGLEDELETEMODAL","TOGGLEDELETEMODAL","SETTOGGLEERRORMODAL","TOGGLEERRORMODAL","SETTOGGLEVIEWER","TOGGLEVIEWER","SETTOGGLECREATEEDIT","TOGGLECREATEEDIT","HTTPRES","SETRESPONSIVE","RESPONSIVE","width","window","innerWidth","addEventListener","List_Main","response","useState","toggleFilter","setToggleFilter","draftFilter","setDraftFilter","pendingFilter","setPendingFilter","paidFilter","setPaidFilter","filterInvoices","type","filtered","toggleFilterType","noInvoices","className","loadingError","filterItemMapping","filterItems","eval","checkedValue","onClick","name","loadedEval","createNewInvoice","listHeader","loadingEval","listOutput","Loading","List_Invoices","dateFormat","input","day","slice","month","monthsArray","Number","year","currencyFormat","amount","Intl","NumberFormat","style","currency","format","toString","invoiceMobileMapping","clientName","paymentDue","total","invoiceMapping","ButtonReqSpinner","optionTerms","days","NewInvoiceTemplate","createdAt","description","paymentTerms","clientEmail","senderAddress","street","city","postCode","country","clientAddress","quantity","price","ItemAddSchema","CreateOrEdit","idRef","createToggle","date","Date","getDay","getDate","getMonth","getFullYear","currentDate","currentMonth","currentYear","startingDate","valuesCheck","Object","values","blankFieldTally","fieldsEval","invoiceEdit","setInvoiceEdit","blankItemTally","setEmptyFields","fieldPass","itemPass","setEmptyItems","setSaveChangeSpinner","setSaveSendSpinner","setDraftSpinner","grandTotalTally","grandTotal","saveAndSendInvoiceInitiate","output","saveAndSendInvoiceToggle","evalFields","newInvoiceId","alphabet","letters","numbers","i","Math","floor","random","toUpperCase","ceil","includes","randomIdGenerator","calStartingState","header","totalTally","monthTally","yearTally","prevMonthNumbers","monthNumbers","postMonthNumbers","toggleTerms","setToggleTerms","emptyFields","emptyItems","toggleCalendar","setToggleCalendar","calState","setCalState","saveChangeSpinner","draftSpinner","saveSendSpinner","itemClicked","setItemClicked","idTally","setIdTally","formStateUpdate","value","index","setCalendarDate","splice","newItem","termsMapping","option","borderBottom","errorStylingEval","field","itemsMapping","itemTotal","toFixed","indexOf","onChange","e","target","itemsMappingMobile","calendarDateGenerator","increment","monthText","headerOutput","daysInMonth","prevDaysInMonth","startingDayOfWeek","numbersTally","currentMonthAdjust","prevNumbersArray","numbersArray","postNumbersArray","prevDaysOfMonth","j","k","l","createdAtYear","createdAtMonth","createdAtDate","createdAtUpdate","createdYearNumber","createdMonthNumber","createdDateNumber","paymentDueFullDate","paymentDueDate","paymentDueMonth","paymentDueYear","paymentDueUpdate","calendarPrevNumbers","number","calendarNumbers","calendarPostNumbers","saveChangesInvoiceToggle","Header","location","reload","ErrorModal","createoredit","top","Viewer","viewInvoice","setViewInvoice","markPaidSpinner","setMarkPaidSpinner","clicked","setClicked","markPaid","calculateItemTotal","numberTotal","priceItemsMapping","priceItemsMappingMobile","addressEval","emptyTally","DeleteModal","deletingId","deleteSpinner","setDeleteSpinner","App","viewerToggle","errorToggle","deleteToggle","bodyScroller","document","body","scrollTo","overflow","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.72d9111e.chunk.js","sourcesContent":["import { Url } from './fetchUrl';\r\nimport { createReduxModule } from 'hooks-for-redux';\r\n\r\n// Redux Store Contains Both State And HTTP Request Management\r\n\r\n// HTTP Requests & State Update\r\n\r\n    // HTTP Response Timer.  Sets HTTP Response Status State And Reverts Back To Starting Default After 1 Second\r\n\r\n    const httpStatusAndReset = (res) => {\r\n            SETHTTPRES(res);\r\n            console.log(res);\r\n        setTimeout(() => {\r\n            SETHTTPRES(\"No Request Made\");\r\n        }, 1000);\r\n    }\r\n\r\n    // GET INVOICES - Sent To App.Js For Formatting Date and Currency Fields\r\n\r\n    const fetchInvoices = async () => { // HTTP GET\r\n        const storedInvoices = JSON.parse(localStorage.getItem(\"SavedInvoices\"));\r\n        console.log(storedInvoices.length > 0);\r\n        if (storedInvoices !== null && storedInvoices.length > 0) {\r\n            setTimeout(() => {\r\n                INITINVOICES(storedInvoices);\r\n                return;\r\n            }, 2000);\r\n        } else {\r\n            const res = await fetch(Url)\r\n            .catch((err) => console.log(err));   \r\n            if (res === undefined) {\r\n                INITINVOICES([\"error\"]);\r\n            } else {\r\n                const data = await res.json();\r\n                data.forEach(list => {\r\n                    let idAssign = 0;\r\n                    list.items.forEach(item => {\r\n                        item.id = idAssign;\r\n                        idAssign += 1;\r\n                    });\r\n                    idAssign = 0;\r\n                });\r\n                setTimeout(() => {\r\n                    INITINVOICES(data);\r\n                }, 2000);\r\n            }\r\n        }\r\n    }\r\n\r\n    fetchInvoices();\r\n\r\n    // SAVE AND SEND\r\n\r\n    const saveSendInvoice = (store, invoice) => { // STATE\r\n        addReq(store,invoice);\r\n        return store;\r\n    }\r\n\r\n    const addReq = async (store, invoice) => { // HTTP POST\r\n        invoice.status = 'pending';\r\n        const updateState = store;\r\n        updateState.push(invoice);\r\n        const localData = JSON.stringify(updateState);\r\n        localStorage.setItem(\"SavedInvoices\", localData);\r\n        setTimeout(() => {\r\n            httpStatusAndReset(\"Save & Send Invoice Request Fulfilled\");\r\n            INITINVOICES(updateState);\r\n        }, 2000);\r\n        // await fetch( Url, {\r\n        //     method: 'POST',\r\n        //     headers: {\r\n        //         'Content-type': 'application/json'\r\n        //     },\r\n        //     body: JSON.stringify({...invoice })\r\n        // })\r\n        // .then(() => { \r\n        //     httpStatusAndReset(\"Save & Send Invoice Request Fulfilled\");\r\n        //     const updateState = store;\r\n        //     updateState.push(invoice);\r\n        //     INITINVOICES(updateState);\r\n        // })\r\n        // .catch(() => httpStatusAndReset(\"Save & Send Invoice Request Failed\")); \r\n    }\r\n\r\n    // SAVE AS DRAFT\r\n\r\n    const draftInvoice = (store, invoice) => { // STATE\r\n        addDraftReq(store, invoice);\r\n        return store;\r\n    }\r\n\r\n    const addDraftReq = async (store, invoice) => { // HTTP POST\r\n        invoice.status = 'draft';\r\n        const updateState = store.concat(invoice);\r\n        const localData = JSON.stringify(updateState);\r\n        localStorage.setItem(\"SavedInvoices\", localData);\r\n        setTimeout(() => {\r\n            httpStatusAndReset(\"Add Draft Invoice Request Fulfilled\");\r\n            INITINVOICES(updateState);\r\n        }, 2000);\r\n        // await fetch( Url, {\r\n        //     method: 'POST',\r\n        //     headers: {\r\n        //         'Content-type': 'application/json'\r\n        //     },\r\n        //     body: JSON.stringify({...invoice })\r\n        // })\r\n        // .then(() => { \r\n        //     httpStatusAndReset(\"Add Draft Invoice Request Fulfilled\");\r\n        //     const updateState = store.concat(invoice);\r\n        //     INITINVOICES(updateState);\r\n        // })\r\n        // .catch(() => httpStatusAndReset(\"Add Draft Invoice Request Failed\")); \r\n    }\r\n\r\n    // MARK AS PAID\r\n\r\n    const markPaidInvoice = (store, id) => { // STATE\r\n        paidUpdateReq(store, id);\r\n        return store;\r\n    }\r\n\r\n    const paidUpdateReq = async (store, id) => { // HTTP PUT\r\n        const invoice = store.filter(store => store.id === id);\r\n        setTimeout(() => {\r\n            invoice[0].status = 'paid';\r\n            const updateState = store.map(list => list.id === invoice[0].id \r\n                ? invoice[0] : list);\r\n            const localData = JSON.stringify(updateState);\r\n            localStorage.setItem(\"SavedInvoices\", localData);\r\n            httpStatusAndReset(\"Mark Paid Request Fulfilled\");\r\n            INITINVOICES(updateState);\r\n        }, 2000)    \r\n\r\n        // await fetch(`${Url}/${id}`, {\r\n        //     method: 'PUT',\r\n        //     headers: {\r\n        //         'Content-type': 'application/json'\r\n        //     },\r\n        //     body: JSON.stringify({...invoice[0], status: 'paid' })\r\n        // })\r\n        // .then(() => { \r\n        //     httpStatusAndReset(\"Mark Paid Request Fulfilled\");\r\n        //     invoice[0].status = 'paid';\r\n        //     const updateState = store.map(list => list.id === invoice[0].id \r\n        //         ? invoice[0] : list);\r\n        //     INITINVOICES(updateState);\r\n        // })\r\n        // .catch(() => httpStatusAndReset(\"Mark Paid Request Failed\")); \r\n    }\r\n\r\n    // SAVE CHANGES\r\n\r\n    const saveChangeInvoice = (store, invoice) => { // STATE\r\n        updReq(store, invoice);\r\n        return store;\r\n    }\r\n\r\n    const updReq = async (store, invoice) => { // HTTP PUT\r\n        invoice.status = 'pending'\r\n        const updateState = store.map(list => list.id === invoice.id \r\n            ? invoice : list);\r\n        const localData = JSON.stringify(updateState);\r\n        localStorage.setItem(\"SavedInvoices\", localData);\r\n        setTimeout(() => {\r\n            httpStatusAndReset(\"Save Changes Request Fulfilled\");\r\n            INITINVOICES(updateState);\r\n        }, 2000);\r\n        // await fetch(`${Url}/${invoice.id}`, {\r\n        //     method: 'PUT',\r\n        //     headers: {\r\n        //         'Content-type': 'application/json'\r\n        //     },\r\n        //     body: JSON.stringify({...invoice, status: 'pending'})\r\n        // })\r\n        // .then(() => { \r\n        //     httpStatusAndReset(\"Save Changes Request Fulfilled\");\r\n        //     invoice.status = 'pending';\r\n        //     const updateState = store.map(list => list.id === invoice.id \r\n        //         ? invoice : list);\r\n        //     INITINVOICES(updateState);\r\n        // })\r\n        // .catch(() => httpStatusAndReset(\"Save Changes Request Failed\")); \r\n    }\r\n\r\n    // DELETE INVOICE\r\n\r\n    const delInvoice = (store, id) => { // STATE DELETE\r\n        delReq(store, id);\r\n        return store;\r\n    }\r\n\r\n    const delReq = async (store, id) => {\r\n        const updateState = store.filter(invoice => invoice.id !== id);\r\n        const localData = JSON.stringify(updateState);\r\n        localStorage.setItem(\"SavedInvoices\", localData);\r\n        setTimeout(() => {\r\n            httpStatusAndReset(\"Delete Request Fulfilled\");\r\n            INITINVOICES(updateState);\r\n        }, 2000);\r\n        // await fetch(`${Url}/${id}`, { // HTTP DELETE\r\n        //     method: 'DELETE'\r\n        // })\r\n        // .then(() => { \r\n        //     httpStatusAndReset(\"Delete Request Fulfilled\");\r\n        //     const updateState = store.filter(invoice => invoice.id !== id);\r\n        //     INITINVOICES(updateState);\r\n        // })\r\n        // .catch(() => httpStatusAndReset(\"Delete Request Failed\"));\r\n    }\r\n\r\n// Invoice List - Fetched Data Is Modified in App.Js To Reformat Dates And Currencies And Then Sent To Invoice List\r\n\r\n    const INVOICE_LIST_START = ['loading']\r\n\r\n    export const [INVOICELIST, {INITINVOICES, SAVEANDSENDINVOICE, SAVEASDRAFTINVOICE, \r\n            MARKASPAIDINVOICE, SAVECHANGESINVOICE, DELETEINVOICE }] = \r\n        createReduxModule('invoice', INVOICE_LIST_START, {\r\n            INITINVOICES: (store, invoice) => invoice,\r\n            SAVEANDSENDINVOICE: (store, invoice) => saveSendInvoice(store, invoice),\r\n            SAVEASDRAFTINVOICE: (store, invoice) => draftInvoice(store, invoice),\r\n            MARKASPAIDINVOICE: (store, id) => markPaidInvoice(store, id),\r\n            SAVECHANGESINVOICE: (store, invoice) => saveChangeInvoice(store, invoice),\r\n            DELETEINVOICE: (store, id) =>  delInvoice(store, id)\r\n        });\r\n\r\n// Invoice Content For Viewer/Editor\r\n\r\n    const INVOICE_START = [];\r\n\r\n    export const [INVOICE, {SETINVOICE}] = \r\n        createReduxModule('invoiceSet', INVOICE_START, {\r\n            SETINVOICE: (store, invoice) => invoice\r\n        });\r\n\r\n// NIGHTMODE Toggler\r\n\r\n    const NIGHTMODE_START = true;\r\n\r\n    export const [NIGHTMODE, {TOGGLENIGHTMODE}] = \r\n        createReduxModule('nightToggle', NIGHTMODE_START, {\r\n            TOGGLENIGHTMODE: (toggle) => !toggle\r\n        });\r\n\r\n// Delete Modal Toggle\r\n\r\n    const DELETEMODALTOGGLE_START = false;\r\n        \r\n    export const [TOGGLEDELETEMODAL, {SETTOGGLEDELETEMODAL}] =\r\n        createReduxModule('deleteToggle', DELETEMODALTOGGLE_START, {\r\n            SETTOGGLEDELETEMODAL: (store, toggle) => toggle\r\n        });\r\n\r\n// Error Modal Toggle\r\n\r\n    const ERRORMODALTOGGLE_START = false;\r\n        \r\n    export const [TOGGLEERRORMODAL, {SETTOGGLEERRORMODAL}] =\r\n        createReduxModule('errorToggle', ERRORMODALTOGGLE_START, {\r\n            SETTOGGLEERRORMODAL: (store, toggle) => toggle\r\n        });\r\n\r\n\r\n// Viewer Toggle\r\n\r\n    const VIEWERTOGGLE_START = false;\r\n    \r\n    export const [TOGGLEVIEWER, {SETTOGGLEVIEWER}] =\r\n        createReduxModule('viewerToggle', VIEWERTOGGLE_START, {\r\n            SETTOGGLEVIEWER: (store, toggle) => toggle\r\n        });\r\n\r\n// Create Or Edit Invoice Toggler\r\n\r\n    const CREATEOREDITTOGGLE_START = false;\r\n\r\n    export const [TOGGLECREATEEDIT, {SETTOGGLECREATEEDIT}] = \r\n        createReduxModule('createOrEditToggle', CREATEOREDITTOGGLE_START, {\r\n            SETTOGGLECREATEEDIT: (store, toggle) => toggle\r\n        });\r\n\r\n// HTTP Request Response OK\r\n\r\n    const HTTPOK_START = \"No Request Made\";\r\n        \r\n    export const [HTTPRES, {SETHTTPRES}] =\r\n        createReduxModule('httpOk', HTTPOK_START, {\r\n            SETHTTPRES: (store, toggle) => toggle\r\n        });\r\n\r\n// MOBILE, TABLET, DESKTOP RESPONSIVE TOGGLER\r\n\r\n    const RESPONSIVE_START = \"Not SET\";\r\n            \r\n    export const [RESPONSIVE, {SETRESPONSIVE}] =\r\n        createReduxModule('responsive', RESPONSIVE_START, {\r\n            SETRESPONSIVE: (store, toggle) => toggle\r\n        });\r\n\r\n    const width = window.innerWidth;\r\n    \r\n    if (width < 768) {\r\n        SETRESPONSIVE('mobile');\r\n    } else if (width > 768 && width < 1200) {\r\n        SETRESPONSIVE('tablet');\r\n    } else SETRESPONSIVE('desktop');\r\n\r\n    window.addEventListener('resize', () => {\r\n        const width = window.innerWidth;\r\n        if (width < 768) {\r\n            SETRESPONSIVE('mobile');\r\n        } else if (width > 768 && width < 1200) {\r\n            SETRESPONSIVE('tablet');\r\n        } else SETRESPONSIVE('desktop');\r\n    });","// Localhost Server\r\n\r\n    // export const Url = 'http://localhost:5000/invoices';\r\n\r\n\r\n// Raw Github app.json\r\n\r\n    export const Url = 'https://raw.githubusercontent.com/ChrisP1108/Invoice-App/main/app.json';\r\n","import Loading from './Loading';\r\nimport Invoices from './List_Invoices';\r\nimport { SETTOGGLECREATEEDIT, INVOICELIST, \r\n    SETINVOICE, RESPONSIVE } from '../redux/Store.js';\r\nimport { useState } from 'react';\r\nimport { filterItems } from '../Arrays/Filters';\r\n\r\nconst List_Main = () => {\r\n\r\n    const list = INVOICELIST();\r\n    const response = RESPONSIVE();\r\n    \r\n    const [toggleFilter, setToggleFilter] = useState(false);\r\n    const [draftFilter, setDraftFilter] = useState(false);\r\n    const [pendingFilter, setPendingFilter] = useState(false);\r\n    const [paidFilter, setPaidFilter] = useState(false);\r\n\r\n    const filterInvoices = () => {\r\n        const type = draftFilter ? 'draft' \r\n            : pendingFilter ? 'pending'\r\n            : paidFilter ? 'paid' : '';\r\n        const filtered = (list.filter(invoice => \r\n            invoice.status === type));\r\n        return type === '' ? list : filtered;\r\n        \r\n    }\r\n\r\n    const toggleFilterType = (type) => {\r\n        switch(type) {\r\n            case 'Draft':\r\n                setDraftFilter(!draftFilter)\r\n                setPendingFilter(false);\r\n                setPaidFilter(false);\r\n                break;\r\n            case 'Pending':\r\n                setDraftFilter(false)\r\n                setPendingFilter(!pendingFilter);\r\n                setPaidFilter(false);\r\n                break;\r\n            case 'Paid':\r\n                setDraftFilter(false)\r\n                setPendingFilter(false);\r\n                setPaidFilter(!paidFilter);\r\n                break;\r\n            default:\r\n                setDraftFilter(false)\r\n                setPendingFilter(false);\r\n                setPaidFilter(false);\r\n                break;\r\n        }\r\n    }\r\n\r\n    const noInvoices = () => {\r\n        return (\r\n            <div className=\"f-ca flex-column no-invoices-container invoice-trans\">\r\n                <div className=\"no-invoices-logo\"></div>\r\n                <div>\r\n                    <h1>{list.length === 0\r\n                        ? `There is nothing here` : `No Results`}</h1>\r\n                </div>\r\n                <div className=\"f-ca flex-column no-invoices-text-margin\">\r\n                    <h2>{list.length === 0 \r\n                        ? `Create an invoice by clicking the` \r\n                        : `No invoices based upon the status`}</h2>\r\n                    <h2><span className=\"no-invoices-space\">\r\n                        {list.length === 0 ? 'New' : draftFilter ? 'Draft' \r\n                        : pendingFilter ? 'Pending' \r\n                        : 'Paid'}</span>\r\n                        {list.length === 0  \r\n                        ? `button and get started` : ` were found`}</h2>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const loadingError = () => {\r\n        return (\r\n            <div className=\"f-ca flex-column no-invoices-container-error invoice-trans\">\r\n                <div className=\"no-invoices-error-logo\"></div>\r\n                <div>\r\n                    <h1>Something went wrong</h1>\r\n                </div>\r\n                <div className=\"f-ca flex-column no-invoices-text-margin\">\r\n                    <h2>Try refreshing the page</h2>\r\n                    <h2>or check your internet connection</h2>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const filterItemMapping = filterItems.map(item => {\r\n        return (\r\n            <div key={item.id}\r\n                className={`${eval(item.checkedValue) && `list-filter-modal-selected`} \r\n                list-filter-modal-item pointer`} onClick ={() => {toggleFilterType(item.name); setToggleFilter(!toggleFilter)}}>\r\n                <div className={`${eval(item.checkedValue) && `checkbox-checked`} checkbox d-none d-xl-block f-c`}></div>\r\n                <h3>{item.name}</h3>\r\n            </div>\r\n        )\r\n    });\r\n\r\n    const loadedEval = () => {\r\n        if (list[0] === \"loading\" || list[0] === \"error\") {\r\n            return false;       \r\n        } else return true\r\n    }\r\n\r\n    const createNewInvoice = () => {\r\n        SETINVOICE([]);\r\n        loadedEval() && SETTOGGLECREATEEDIT(true);\r\n    }\r\n\r\n    const listHeader = () => {\r\n        return (\r\n            <div className=\"row m-0 list-container-filter d-flex justify-content-between position-relative\">\r\n                <div className=\"col-5 ns d-flex flex-column justify-content-around\">\r\n                    <h1>Invoices</h1>\r\n                    <h2>{list[0] === 'loading' ? `Loading invoices`\r\n                            : list[0] === 'error' ? `Error`\r\n                            : list.length === 0 ? `No invoices` \r\n                            : list.length === 1 ? `1 invoice`\r\n                            : response === 'mobile' ? `${list.length} invoices`\r\n                            : `There are ${list.length} total invoices`}</h2>\r\n                </div>\r\n                <div className=\"col-7 ns f-ae\">\r\n                    <div className=\"d-flex\">\r\n                        <div className=\"d-flex\">\r\n                            <div onClick={() => loadedEval() && list.length > 0 \r\n                                && setToggleFilter(!toggleFilter)} className=\"d-flex pointer\">\r\n                                <h3>{response === 'mobile' ? `Filter` : `Filter by status`}</h3>\r\n                                <div className=\"filter-container f-c\">\r\n                                    <div className={`${toggleFilter && `filter-arrow-clicked`} filter-arrow`}></div>\r\n                                </div>\r\n                            </div>\r\n                            <div className={`${toggleFilter ? `list-filter-modal-trans-on`\r\n                                : loadedEval() ? `list-filter-modal-trans-off` : `d-none`} list-filter-modal position-absolute`}>\r\n                                <div className=\"list-modal-outer-container\">\r\n                                    <div className=\"d-flex flex-column h-100 justify-content-between list-modal-inner-container\">\r\n                                        {filterItemMapping}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div onClick={() => createNewInvoice()}\r\n                        className=\"button-container pointer f-c\">\r\n                        <div className=\"f-c\">\r\n                            <div className=\"button-circle f-c\">\r\n                                <div className=\"button-icon\"></div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"button\"><span>{response === 'mobile' ? `New` : `New Invoice`}</span></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const loadingEval = () => {\r\n        return (\r\n            list[0] === 'loading' ? <Loading />\r\n            : list[0] === 'error' ? loadingError() \r\n            : filterInvoices().length === 0 ? noInvoices()\r\n            : list.length > 0 ? <Invoices listOutput={filterInvoices()} />\r\n            : noInvoices()\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div id=\"list\">\r\n            <div className=\"list-container\">\r\n                {listHeader()}\r\n                <div className=\"invoice-top-margin\"></div>\r\n                {loadingEval()}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default List_Main\r\n","const Loading = () => {\r\n    return (\r\n        <div id=\"loading\" className=\"invoice-trans\">\r\n            <div className=\"lds-default d-flex mx-auto margin\">\r\n                <div></div><div></div><div></div>\r\n                <div></div><div></div><div></div><div></div>\r\n                <div></div><div></div><div></div><div></div>\r\n                <div></div>\r\n            </div>\r\n            <div className=\"f-c mt-5\">\r\n                <h1>Loading . . .</h1>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading\r\n\r\n","import { SETINVOICE, SETTOGGLEVIEWER, RESPONSIVE } from '../redux/Store.js';\r\nimport { monthsArray } from '../Arrays/Months';\r\n\r\nconst List_Invoices = ({ listOutput }) => {\r\n\r\n    const response = RESPONSIVE();\r\n\r\n    const dateFormat = (input) => {\r\n        const day= input.slice(8, 10);\r\n        let month = monthsArray[Number(input.slice(5, 7)) - 1];\r\n        const year = input.slice(0, 4);\r\n        const formatted = `${day} ${month} ${year}`;\r\n        return formatted;\r\n    }\r\n\r\n    const currencyFormat = (amount) => {\r\n        const output = `£ ${new Intl.NumberFormat ('en-UK', { style: 'currency', currency: 'GBP'}).format(amount).toString().slice(1)}`;\r\n        return output;\r\n    }\r\n\r\n    const invoiceMobileMapping = listOutput.map(item => {\r\n        return (\r\n            <div key={item.id} onClick={() => {SETINVOICE(item); SETTOGGLEVIEWER(true);}}\r\n                id=\"invoices\" className=\"invoice-outer-container position-relative pointer invoice-trans\">\r\n                <div className=\"invoice-inner-container position-absolute w-100 my-auto mx-auto\">\r\n                    <div className=\"invoice-container-row\">\r\n                        <h3><span>#</span>{item.id}</h3>\r\n                        <h2>{item.clientName === '' ? `No Name Entered` : item.clientName}</h2>\r\n                    </div>\r\n                    <div className=\"f-ca\">\r\n                        <div className=\"d-flex flex-column w-50\">\r\n                            <h2>Due {item.paymentDue === '' ? `Date Not Selected` : dateFormat(item.paymentDue)}</h2>\r\n                            <div className=\"mt-2\">\r\n                                <h4>{item.total === 0 ? `No total` : currencyFormat(item.total)}</h4>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"f-ae\">\r\n                            <div className={`payment-button-${item.status} f-c payment-button-container`}>\r\n                                <div className=\"payment-status f-c\">\r\n                                    <div className={`dot-${item.status} payment-dot`}></div>\r\n                                    <h5>{item.status === 'paid' ? `Paid` : item.status === 'pending' ? `Pending` : `Draft`}</h5>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    });\r\n\r\n    const invoiceMapping = listOutput.map(item => {\r\n        return (\r\n            <div key={item.id} onClick={() => {SETINVOICE(item); SETTOGGLEVIEWER(true);}}\r\n                id=\"invoices\" className=\"invoice-outer-container position-relative pointer invoice-trans\">\r\n                <div className=\"invoice-inner-container\">\r\n                    <div className=\"d-flex align-items-center\"> \r\n                        <div className=\"invoice-container-width-15\">\r\n                            <h3><span>#</span>{item.id}</h3>\r\n                        </div>\r\n                        <div className=\"invoice-container-width-22\">\r\n                            <h2>Due {item.paymentDue === '' ? `Date Not Selected` : dateFormat(item.paymentDue)}</h2>\r\n                        </div>\r\n                        <div className=\"invoice-container-width-20\">\r\n                            <h2>{item.clientName === '' ? `No Name Entered` : item.clientName}</h2>\r\n                        </div>\r\n                        <div className=\"invoice-container-width-17 f-ae\">\r\n                            <h4>{item.total === 0 ? `No total` : currencyFormat(item.total)}</h4>\r\n                        </div>\r\n                        <div className=\"invoice-container-width-28 d-flex f-ae\">\r\n                            <div className={`payment-button-${item.status} f-c payment-button-container`}>\r\n                                <div className=\"payment-status f-c\">\r\n                                    <div className={`dot-${item.status} payment-dot`}></div>\r\n                                    <h5>{item.status === 'paid' ? `Paid` : item.status === 'pending' ? `Pending` : `Draft`}</h5>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"\">\r\n                                <div className=\"invoice-right-arrow\"></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <>\r\n            {response === 'mobile' ? invoiceMobileMapping : invoiceMapping}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default List_Invoices\r\n","export const filterItems = [\r\n    {\r\n        id: 1,\r\n        name: 'Draft',\r\n        checkedValue: 'draftFilter'\r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'Pending',\r\n        checkedValue: 'pendingFilter'\r\n    },\r\n    {\r\n        id: 3,\r\n        name: 'Paid',\r\n        checkedValue: 'paidFilter'\r\n    },\r\n];\r\n","const ButtonReqSpinner = () => {\r\n    return (\r\n        <div id=\"buttonReqSpinner\" className=\"position-absolute f-c\">\r\n            <div className=\"lds-ellipsis\">\r\n                <div></div><div></div>\r\n                <div></div><div></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ButtonReqSpinner\r\n","export const optionTerms = [\r\n    {\r\n        id: 1,\r\n        name: 'Net 1 Day',\r\n        days: 1\r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'Net 7 Days',\r\n        days: 7\r\n    },\r\n    {\r\n        id: 3,\r\n        name: 'Net 14 Days',\r\n        days: 14\r\n    },\r\n    {\r\n        id: 4,\r\n        name: 'Net 30 Days',\r\n        days: 30\r\n    }\r\n];","export const NewInvoiceTemplate = {\r\n    id: \"\",\r\n    createdAt: \"\",\r\n    paymentDue: \"\",\r\n    description: \"\",\r\n    paymentTerms: null,\r\n    clientName: \"\",\r\n    clientEmail: \"\",\r\n    status: \"Not Set\",\r\n    senderAddress: {\r\n        street: \"\",\r\n        city: \"\",\r\n        postCode: \"\",\r\n        country: \"\"\r\n    },\r\n    clientAddress: {\r\n        street: \"\",\r\n        city: \"\",\r\n        postCode: \"\",\r\n        country: \"\"\r\n    },\r\n    items: [\r\n        {\r\n            id: 0,\r\n            name: \"\",\r\n            quantity: 0,\r\n            price: 0,\r\n            total: 0\r\n        }\r\n    ],\r\n    total: \"Not Set\"\r\n}\r\n\r\nexport const ItemAddSchema = \r\n    {\r\n        id: 0,\r\n        name: \"\",\r\n        quantity: 0,\r\n        price: 0,\r\n        total: 0\r\n    }","import ButtonReqSpinner from './ButtonReqSpinner';\r\nimport { useState } from 'react';\r\nimport { optionTerms } from '../Arrays/Options';\r\nimport { monthsArray } from '../Arrays/Months';\r\nimport { NewInvoiceTemplate, ItemAddSchema } from '../New-Invoice-Template';\r\nimport { INVOICE, SETINVOICE,\r\n    SETHTTPRES, HTTPRES, SETTOGGLEERRORMODAL, \r\n    SETTOGGLECREATEEDIT, SAVECHANGESINVOICE, SAVEANDSENDINVOICE, \r\n    SAVEASDRAFTINVOICE, RESPONSIVE, TOGGLECREATEEDIT } from '../redux/Store.js';\r\n\r\nconst CreateOrEdit = () => {\r\n\r\n    const idRef = INVOICE().id\r\n    const createToggle = TOGGLECREATEEDIT();\r\n\r\n    const response = RESPONSIVE();\r\n\r\n    const date = new Date();\r\n    const dayOfWeek = date.getDay();\r\n    const day = date.getDate();\r\n    const month = date.getMonth();\r\n    const year = date.getFullYear();\r\n    const currentDate = new Date().toString();\r\n    const currentMonth = currentDate.slice(4, 7);\r\n    const currentYear = currentDate.slice(11, 15);\r\n    const startingDate = `${currentMonth} ${currentYear}`;\r\n\r\n    const valuesCheck = (items) => {\r\n        Object.values(items).forEach(item => {\r\n            if (item === '' || item === null || item === 0 || item < 0) {\r\n                blankFieldTally += 1;\r\n            }\r\n        });\r\n    }\r\n\r\n    const fieldsEval = () => {\r\n        const data = invoiceEdit; \r\n        // Final Item Price Calculations Before Evaluating Object\r\n        setInvoiceEdit({...data});\r\n        blankFieldTally = 0;\r\n        blankItemTally = 0;\r\n        valuesCheck(invoiceEdit);\r\n        valuesCheck(invoiceEdit.senderAddress);\r\n        valuesCheck(invoiceEdit.clientAddress);\r\n        invoiceEdit.items.forEach(item => {\r\n            if (item.name === '') {\r\n                blankItemTally += 1;\r\n            }\r\n            if (item.quantity === 0) {\r\n                blankItemTally += 1;\r\n            }\r\n            if (item.price === 0) {\r\n                blankItemTally += 1;\r\n            }\r\n        });\r\n        blankFieldTally > 0 ? setEmptyFields(true) : setEmptyFields(false);\r\n        const fieldPass = blankFieldTally > 0 ? false : true;\r\n        const itemPass = blankItemTally > 0 ? false : true;\r\n        if (fieldPass) { \r\n            setEmptyFields(false);\r\n        } else {\r\n            setEmptyFields(true);\r\n        }\r\n        if (itemPass) { \r\n            setEmptyItems(false);\r\n        } else {\r\n            setEmptyItems(true);\r\n        }\r\n        return itemPass && fieldPass ? true : false;\r\n    }\r\n\r\n    if (HTTPRES() === \"Save Changes Request Failed\") {\r\n        setTimeout(() => {\r\n            SETTOGGLEERRORMODAL(true);\r\n            setSaveChangeSpinner(false);\r\n        }, 500);\r\n    } \r\n    if (HTTPRES() === \"Save Changes Request Fulfilled\") {\r\n        setTimeout(() => {\r\n            setSaveChangeSpinner(false);\r\n            SETINVOICE({...invoiceEdit, status: 'pending'});\r\n            SETTOGGLECREATEEDIT(false);\r\n        }, 500); \r\n    }\r\n    if (HTTPRES() === \"Save & Send Invoice Request Failed\") {\r\n        setTimeout(() => {\r\n            SETTOGGLEERRORMODAL(true);\r\n            setSaveSendSpinner(false);\r\n        }, 500);\r\n    } \r\n    if (HTTPRES() === \"Save & Send Invoice Request Fulfilled\") {\r\n        setTimeout(() => {\r\n            setSaveSendSpinner(false);\r\n            SETTOGGLECREATEEDIT(false);\r\n            setInvoiceEdit({...invoiceEdit, status: 'pending'})\r\n        }, 500); \r\n    }\r\n    if (HTTPRES() === \"Add Draft Invoice Request Failed\") {\r\n        setTimeout(() => {\r\n            SETTOGGLEERRORMODAL(true);\r\n            setDraftSpinner(false);\r\n        }, 500);\r\n    } \r\n    if (HTTPRES() === \"Add Draft Invoice Request Fulfilled\") {\r\n        setTimeout(() => {\r\n            setDraftSpinner(false);\r\n            SETTOGGLECREATEEDIT(false);\r\n            setInvoiceEdit({...invoiceEdit, status: 'draft'});\r\n        }, 500); \r\n    }\r\n\r\n    const grandTotalTally = (input) => {\r\n        let grandTotal = 0;\r\n        input.items.forEach(item => {\r\n            const amount = item.price * item.quantity;\r\n            item.total = amount;\r\n            grandTotal += amount;\r\n        });\r\n        input.total = grandTotal;\r\n        return input;\r\n    }\r\n\r\n    const saveChangesInvoiceToggle = () => {\r\n        const output = grandTotalTally(invoiceEdit);\r\n        fieldsEval();\r\n        if (fieldsEval()) {\r\n            setSaveChangeSpinner(true);\r\n            SETHTTPRES(\"Save Changes Request Pending\");\r\n            SAVECHANGESINVOICE(output);\r\n        } else console.log(\"Fields & Or Items Are Empty\");\r\n    }\r\n\r\n    const saveAndSendInvoiceInitiate = (type) => {\r\n        const output = grandTotalTally(invoiceEdit);\r\n        if (type === 'Save') {\r\n            setSaveSendSpinner(true);\r\n            SETHTTPRES(\"Save & Send Invoice Request Pending\");\r\n            SAVEANDSENDINVOICE(output);\r\n        } else if (type === 'Draft') {\r\n            setDraftSpinner(true);\r\n            SETHTTPRES(\"Add Draft Invoice Request Pending\");\r\n            SAVEASDRAFTINVOICE(output);\r\n        }\r\n    }\r\n\r\n    const saveAndSendInvoiceToggle = (evalFields) => {\r\n        if (evalFields) {\r\n            fieldsEval();\r\n            if (fieldsEval()) {\r\n                saveAndSendInvoiceInitiate('Save');\r\n            } else console.log(\"Fields & Or Items Are Empty\");\r\n        } else {\r\n            saveAndSendInvoiceInitiate('Draft');\r\n        }     \r\n    }\r\n\r\n    const input = INVOICE().id === undefined ? NewInvoiceTemplate : INVOICE();\r\n\r\n    const randomIdGenerator = () => {  \r\n        let alphabet;\r\n        let letters;\r\n        let numbers;\r\n        let id;\r\n        for (let i = 0; i < 1; i++) {\r\n            alphabet = \"abcdefghijklmnopqrstuvwxyz\";\r\n            letters = alphabet[Math.floor(Math.random() * alphabet.length)].toUpperCase()\r\n                + alphabet[Math.floor(Math.random() * alphabet.length)].toUpperCase();\r\n            numbers = Math.ceil(Math.random() * 9999);\r\n            numbers < 10 ? numbers = `000${numbers}`\r\n            : numbers < 100 ? numbers = `00${numbers}`\r\n            : numbers < 1000 ? numbers = `0${numbers}`\r\n            : numbers = `${numbers}`\r\n            id = `${letters}${numbers}`;\r\n            if (input.id.includes(id)) {\r\n                i -= 1;\r\n            }\r\n        }\r\n        return id;\r\n    }\r\n\r\n    const newInvoiceId = randomIdGenerator();\r\n\r\n    input.id = input.id === '' ? newInvoiceId : input.id;\r\n\r\n    const calStartingState = {\r\n        header: startingDate,\r\n        totalTally: 0,\r\n        monthTally: month,\r\n        yearTally: year,\r\n        prevMonthNumbers: [],\r\n        monthNumbers: [],\r\n        postMonthNumbers: []\r\n    }\r\n\r\n    const [invoiceEdit, setInvoiceEdit] = useState(input);\r\n    const [toggleTerms, setToggleTerms] = useState(false);\r\n    const [emptyFields, setEmptyFields] = useState(false);\r\n    const [emptyItems, setEmptyItems] = useState(false);\r\n    const [toggleCalendar, setToggleCalendar] = useState(false);\r\n    const [calState, setCalState] = useState(calStartingState);\r\n    const [saveChangeSpinner, setSaveChangeSpinner] = useState(false);\r\n    const [draftSpinner, setDraftSpinner] = useState(false);\r\n    const [saveSendSpinner, setSaveSendSpinner] = useState(false);\r\n    const [itemClicked, setItemClicked] = useState(false);\r\n    const [idTally, setIdTally] = useState(1);\r\n\r\n    invoiceEdit.id === '' && setInvoiceEdit({...invoiceEdit, id: newInvoiceId});\r\n\r\n    let blankFieldTally;\r\n    let blankItemTally;\r\n\r\n    blankFieldTally > 0 && setEmptyFields(true);\r\n    \r\n    const backHeader = () => {\r\n        return (\r\n            <div onClick={() => SETTOGGLECREATEEDIT(false)} \r\n                className={response === 'mobile' ? `back-container pointer position-relative` \r\n                    : `d-none`}>\r\n                <div className=\"back-arrow\"></div>\r\n                <div className=\"d-flex\">\r\n                    <h3>Go back</h3>\r\n                </div>\r\n                <div className=\"back-container-filler\"></div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const title = () => {\r\n        return (\r\n            <div className=\"createoredit-title\">\r\n                {idRef === undefined ?\r\n                    <h1>New Invoice</h1>\r\n                    : <h1>Edit <span>#</span>{invoiceEdit.id}</h1>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    const formStateUpdate = (type, value, id) => {\r\n        let data = invoiceEdit;\r\n        const index = id === undefined ? invoiceEdit.items.length - 1 : id; \r\n        switch (type) {\r\n            case 'senderAddress.street':\r\n                data.senderAddress.street = value;\r\n                break;\r\n            case 'senderAddress.city':\r\n                data.senderAddress.city = value;\r\n                break;\r\n            case 'senderAddress.postCode':\r\n                data.senderAddress.postCode = value;\r\n                break;\r\n            case 'senderAddress.country':\r\n                data.senderAddress.country = value;\r\n                break;\r\n            case 'clientName':\r\n                data.clientName = value;\r\n                break;\r\n            case 'clientEmail':\r\n                data.clientEmail = value;\r\n                break;\r\n            case 'clientAddress.street':\r\n                data.clientAddress.street = value;\r\n                break;\r\n            case 'clientAddress.city':\r\n                data.clientAddress.city = value;\r\n                break;\r\n            case 'clientAddress.postCode':\r\n                data.clientAddress.postCode = value;\r\n                break;\r\n            case 'clientAddress.country':\r\n                data.clientAddress.country = value;\r\n                break;\r\n            case 'createdAt':\r\n                data.clientAddress.createdAt = value;\r\n                break;\r\n            case 'paymentTerms':\r\n                data.paymentTerms = value;\r\n                setToggleTerms(false);\r\n                setCalendarDate('payment');\r\n                break;\r\n            case 'description':\r\n                data.description = value;\r\n                break;\r\n            case 'item.name':\r\n                data.items[index].name = value;\r\n                break;\r\n            case 'item.quantity':\r\n                value < 0  ? data.items[index].quantity = Number(0)\r\n                : data.items[index].quantity = Number(value);\r\n                break;\r\n            case 'item.price':\r\n                value < 0  ? data.items[index].price = 0\r\n                : data.items[index].price = Number(value);\r\n                break;\r\n            case 'deleteItem':\r\n                if (data.items.length == 1) {\r\n                    break;\r\n                }\r\n                setIdTally(idTally - 1);\r\n                data.items.splice(index, 1)\r\n                break;\r\n            case 'addItem':\r\n                const newItem = ItemAddSchema;\r\n                newItem.id = idTally;\r\n                setIdTally(idTally + 1);\r\n                data.items.push(newItem);\r\n                break;\r\n            case 'discard':\r\n                setInvoiceEdit(NewInvoiceTemplate);\r\n                data = NewInvoiceTemplate;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        setInvoiceEdit({...data});\r\n    }\r\n\r\n    const termsMapping = optionTerms.map(option => {\r\n        return (\r\n            <div onClick={() => formStateUpdate('paymentTerms', option.days)}\r\n                key={option.id} \r\n                className={`${option.id === 1 ? `createoredit-option-first`\r\n                : option.id === 4 ? `createoredit-option-last` : ``} createoredit-option pointer`}\r\n                style={{ borderBottom: option.id == 4 && `0rem $white solid` }}>\r\n                <span>{option.name}</span>\r\n            </div>\r\n        )\r\n    });\r\n\r\n    const errorStylingEval = (field) => {\r\n        if (!emptyFields && !emptyItems) {\r\n            return false\r\n        }\r\n        if (field === '' || field === 0 || field === null) {\r\n            return true\r\n        } else return false\r\n    }\r\n\r\n    const itemsMapping = invoiceEdit.items.map(item => {\r\n\r\n        const itemTotal = (item.quantity * item.price).toFixed(2);\r\n\r\n        const index = invoiceEdit.items.indexOf(item);\r\n\r\n        return (\r\n            <div key={item.id} className=\"createoredit-trans-item d-flex\">\r\n                <div className=\"createoredit-item-row-container w-45\">\r\n                    <input \r\n                        type=\"text\"\r\n                        name='item.name'\r\n                        value={item.name}\r\n                        onChange={(e) => formStateUpdate(e.target.name, e.target.value, index)}                            \r\n                        className={errorStylingEval(item.name) \r\n                            ? `createoredit-field-error` : `createoredit-field`}> \r\n                    </input>\r\n                </div>\r\n                <div className=\"r-1\"></div>\r\n                <div className=\"createoredit-item-row-container w-15\">\r\n                    <input \r\n                        type=\"number\"\r\n                        name='item.quantity'\r\n                        value={item.quantity}\r\n                        onChange={(e) => formStateUpdate(e.target.name, e.target.value, index)}\r\n                        className={errorStylingEval(item.quantity)  \r\n                            ? `createoredit-field-error` : `createoredit-field`}> \r\n                    </input>\r\n                </div>\r\n                <div className=\"r-1\"></div>\r\n                <div className=\"createoredit-item-row-container w-20\">\r\n                    <input \r\n                        type=\"number\"\r\n                        name='item.price'\r\n                        value={item.price.toFixed(2)}\r\n                        onChange={(e) => formStateUpdate(e.target.name, e.target.value, index)}\r\n                        className={errorStylingEval(item.price) \r\n                        ? `createoredit-field-error` : `createoredit-field`}> \r\n                    </input>\r\n                </div>\r\n                <div className=\"r-1\"></div>\r\n                    <div className=\"createoredit-item-row-container w-20\">\r\n                        <div className=\"createoredit-item-total\">\r\n                            <h4><span>{itemTotal}</span></h4>\r\n                            <div className=\"position-relative\">\r\n                                <div>\r\n                                <div \r\n                                    onClick={() => {formStateUpdate('deleteItem', item, index);\r\n                                        setItemClicked(false)}}\r\n                                    className=\"createoredit-item-trash-filler pointer f-c\">\r\n                                        <div className=\"createoredit-item-trash-icon\"></div>         \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"createoredit-item-separation-margin\"></div>\r\n            </div>\r\n        )\r\n    });\r\n\r\n    const itemsMappingMobile = invoiceEdit.items.map(item => {\r\n\r\n        const itemTotal = (item.quantity * item.price).toFixed(2);\r\n\r\n        const index = invoiceEdit.items.indexOf(item);\r\n\r\n        return (\r\n            <div key={item.id} className=\"createoredit-trans-item\">\r\n                <div className=\"createoredit-form-row-full-container f-clb\">\r\n                    <div className=\"f-sb\">\r\n                        <h4 className={errorStylingEval(item.name) \r\n                                && `createoredit-error-highlight`}>Item Name</h4>\r\n                        {errorStylingEval(item.name) \r\n                            && <p className=\"d-md-none\">can't be empty</p>}\r\n                    </div>\r\n                    <input \r\n                        type=\"text\"\r\n                        name='item.name'\r\n                        value={item.name}\r\n                        onChange={(e) => formStateUpdate(e.target.name, e.target.value, item.id)}                            \r\n                        className={errorStylingEval(item.name) \r\n                            ? `createoredit-field-error` : `createoredit-field`}> \r\n                    </input>\r\n                </div>\r\n                <div className=\"d-flex\">\r\n                    <div className=\"createoredit-form-row-full-container f-clb\">\r\n                    <div className=\"f-sb d-md-none\">\r\n                        <h4 className={errorStylingEval(item.quantity) \r\n                                && `createoredit-error-highlight`}>Qty.</h4>\r\n                        {errorStylingEval(item.quantity) \r\n                            && <p className=\"d-md-none\">can't be 0</p>}\r\n                    </div>\r\n                        <input \r\n                            type=\"number\"\r\n                            name='item.quantity'\r\n                            value={item.quantity}\r\n                            onChange={(e) => formStateUpdate(e.target.name, e.target.value, item.id)}\r\n                            className={errorStylingEval(item.quantity)  \r\n                                ? `createoredit-field-error` : `createoredit-field`}> \r\n                        </input>\r\n                    </div>\r\n                    <div className=\"createoredit-column-gap\"></div>\r\n                    <div className=\"createoredit-form-row-full-container f-clb\">\r\n                        <div className=\"f-sb d-md-none\">\r\n                            <h4 className={errorStylingEval(item.price) \r\n                                && `createoredit-error-highlight`}>Price</h4>\r\n                            {errorStylingEval(item.price)\r\n                            && <p className=\"d-md-none\">can't be 0</p>}\r\n                        </div>\r\n                        <input \r\n                            type=\"number\"\r\n                            name='item.price'\r\n                            value={item.price.toFixed(2)}\r\n                            onChange={(e) => formStateUpdate(e.target.name, e.target.value, item.id)}\r\n                            className={errorStylingEval(item.price) \r\n                            ? `createoredit-field-error` : `createoredit-field`}> \r\n                        </input>\r\n                    </div>\r\n                    <div className=\"createoredit-column-gap\"></div>\r\n                    <div className=\"createoredit-form-row-full-container f-clb\">\r\n                        <h4 className=\"d-md-none\">Total</h4>\r\n                        <div className=\"createoredit-item-total\">\r\n                            <h4><span>{itemTotal}</span></h4>\r\n                            <div className=\"position-relative\">\r\n                                <div>\r\n                                <div \r\n                                    onClick={() => {formStateUpdate('deleteItem', item, item.id);\r\n                                        setItemClicked(false)}}\r\n                                    className=\"createoredit-item-trash-filler pointer f-c\">\r\n                                        <div className=\"createoredit-item-trash-icon\"></div>         \r\n                                </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"createoredit-item-separation-margin\"></div>\r\n            </div>\r\n        )\r\n    });\r\n\r\n    const calendarDateGenerator = (increment) => {\r\n        const data = calState;\r\n\r\n        if (increment === '-') {\r\n            if (data.totalTally == 0) {\r\n                return;\r\n            }\r\n            data.totalTally -= 1;\r\n            data.monthTally -= 1;\r\n        } else if (increment === '+') {\r\n            data.totalTally += 1;\r\n            data.monthTally += 1;\r\n        }\r\n\r\n        if (data.monthTally > 11) {\r\n            data.monthTally = 0;\r\n            data.yearTally += 1;\r\n        } else if (data.monthTally < 0) {\r\n            data.monthTally = 11;\r\n            data.yearTally -= 1;\r\n        } \r\n\r\n        const monthText = monthsArray[data.monthTally];       \r\n        const headerOutput = `${monthText} ${data.yearTally}`;\r\n        data.header = headerOutput;\r\n\r\n        const daysInMonth = new Date(data.yearTally, data.monthTally, 0).getDate();\r\n        const prevDaysInMonth = new Date(data.monthTally == 0 ? data.yearTally - 1 \r\n            : data.yearTally, data.monthTally - 1, 0).getDate();\r\n        const startingDayOfWeek = new Date(data.yearTally, data.monthTally, 1).getDay();\r\n        let numbersTally = 0;\r\n        let currentMonthAdjust = 1;\r\n        const prevNumbersArray = [];\r\n        const numbersArray = [];\r\n        const postNumbersArray = [];\r\n        if (startingDayOfWeek !== 0) {\r\n            let prevDaysOfMonth = prevDaysInMonth - startingDayOfWeek;\r\n            for (let i = 1; i <= startingDayOfWeek; i++) {\r\n                prevNumbersArray.push(prevDaysOfMonth);\r\n                prevDaysOfMonth += 1;\r\n                numbersTally += 1;\r\n            }\r\n        }\r\n        if (calState.totalTally === 0) {\r\n            for (let j = 1; j <= day - 1; j++) {\r\n                prevNumbersArray.push(j);\r\n                numbersTally += 1;\r\n            }\r\n            currentMonthAdjust = day;\r\n        }\r\n        for (let k = currentMonthAdjust; k <= daysInMonth; k++) {\r\n            numbersArray.push(k);\r\n            numbersTally += 1;\r\n        }\r\n        if (numbersTally < 42) {\r\n            for (let l = 1; numbersTally < 42; l++) {\r\n                postNumbersArray.push(l);\r\n                numbersTally += 1;\r\n            }\r\n        }\r\n        data.prevMonthNumbers = prevNumbersArray;\r\n        data.monthNumbers = numbersArray;\r\n        data.postMonthNumbers = postNumbersArray;\r\n        setCalState({...calState, data});\r\n    }\r\n\r\n    const setCalendarDate = (input) => {\r\n        let createdAtYear = calState.yearTally;\r\n        let createdAtMonth = calState.monthTally + 1;\r\n        createdAtMonth = createdAtMonth < 10 ? `0${createdAtMonth}` : createdAtMonth;\r\n        let createdAtDate = input;\r\n        createdAtDate = createdAtDate < 10 ? `0${createdAtDate}` : createdAtDate;\r\n        if (input !== 'payment') {\r\n            const createdAtUpdate = invoiceEdit;\r\n            createdAtUpdate.createdAt = \r\n                `${createdAtYear}-${createdAtMonth}-${createdAtDate}`;\r\n            console.log(createdAtUpdate.createdAt);\r\n            setInvoiceEdit({...createdAtUpdate});\r\n            setToggleCalendar(false);\r\n        }\r\n        const createdYearNumber = Number(invoiceEdit.createdAt.slice(0, 4));\r\n        const createdMonthNumber = Number(invoiceEdit.createdAt.slice(5, 7) - 1);\r\n        const createdDateNumber = Number(invoiceEdit.createdAt.slice(8));\r\n        const paymentDueFullDate = new Date(createdYearNumber, \r\n            createdMonthNumber, createdDateNumber + invoiceEdit.paymentTerms);\r\n        let paymentDueDate = paymentDueFullDate.getDate();\r\n        paymentDueDate = paymentDueDate == 0 ? 1 : paymentDueDate;\r\n        paymentDueDate = paymentDueDate < 10 ? `0${paymentDueDate}` : paymentDueDate;\r\n        let paymentDueMonth = paymentDueFullDate.getMonth() + 1;\r\n        paymentDueMonth = paymentDueMonth < 10 ? `0${paymentDueMonth}` : paymentDueMonth;\r\n        let paymentDueYear = paymentDueFullDate.getFullYear();\r\n        const paymentDueUpdate = invoiceEdit;\r\n        paymentDueUpdate.paymentDue = `${paymentDueYear}-${paymentDueMonth}-${paymentDueDate}`;\r\n        setInvoiceEdit({...paymentDueUpdate});\r\n    }\r\n\r\n    const calendarPrevNumbers = calState.prevMonthNumbers.map(number => {\r\n        return (\r\n            <h6 className=\"o10\">{number}</h6>\r\n        )\r\n    });\r\n\r\n    const calendarNumbers = calState.monthNumbers.map(number => {\r\n        return (\r\n            <h6 onClick={() => setCalendarDate(number)}\r\n                className=\"createoredit-calendar-day\">{number}</h6>\r\n        )\r\n    });\r\n\r\n    const calendarPostNumbers = calState.postMonthNumbers.map(number => {\r\n        return (\r\n            <h6 className=\"o10\">{number}</h6>\r\n        )\r\n    });\r\n\r\n    const calendarModal = () => {\r\n        return (\r\n            <div className=\"createoredit-calendar-outer-container position-absolute\">\r\n                <div className=\"createoredit-calendar-inner-main-container f-sb flex-column\">\r\n                    <div className=\"createoredit-calendar-inner-top-container\">  \r\n                        <div className=\"f-ca\">\r\n                            <div className={calState.totalTally !== 0 \r\n                                    &&`createoredit-calendar-left-arrow position-relative`}>\r\n                                <div onClick={() => calendarDateGenerator('-')}\r\n                                    className=\"createoredit-calendar-arrow-left-filler pointer\"></div>\r\n                            </div>\r\n                                <span>{calState.header}</span>\r\n                            <div className=\"createoredit-calendar-right-arrow position-relative\">\r\n                                <div onClick={() => calendarDateGenerator('+')}\r\n                                    className=\"createoredit-calendar-arrow-right-filler pointer\"></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"createoredit-calendar-days-container\">\r\n                        {calendarPrevNumbers}\r\n                        {calendarNumbers}\r\n                        {calendarPostNumbers}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const dateFormat = (input) => {\r\n        const day= input.slice(8, 10);\r\n        let month = monthsArray[Number(input.slice(5, 7)) - 1];\r\n        const year = input.slice(0, 4);\r\n        const formatted = `${day} ${month} ${year}`;\r\n        return formatted;\r\n    }\r\n\r\n    const formBody = () => {\r\n        return (\r\n            <>\r\n                <div className=\"createoredit-bill-top-margin\">\r\n                    <h2>Bill From</h2>\r\n                </div>\r\n                <div \r\n                    className=\"createoredit-form-row-full-container f-clb\">\r\n                        <div className=\"f-sb\">\r\n                            <h4 className={errorStylingEval(invoiceEdit.senderAddress.street) \r\n                                && `createoredit-error-highlight`}>Street Address</h4>\r\n                            {errorStylingEval(invoiceEdit.senderAddress.street)\r\n                            && <p>can't be empty</p>}\r\n                        </div>\r\n                        <input \r\n                            type=\"text\"\r\n                            name=\"senderAddress.street\"\r\n                            value={invoiceEdit.senderAddress.street}\r\n                            onChange={(e) => formStateUpdate(e.target.name, e.target.value)}\r\n                            className={errorStylingEval(invoiceEdit.senderAddress.street) \r\n                                ? `createoredit-field-error` : `createoredit-field`}>\r\n                        </input>\r\n                </div>\r\n                <div className=\"d-flex\">\r\n                    <div className=\"createoredit-form-row-full-container f-clb\">\r\n                        <div className=\"f-sb\">\r\n                            <h4 className={errorStylingEval(invoiceEdit.senderAddress.city) \r\n                                && `createoredit-error-highlight`}>City</h4>\r\n                            {errorStylingEval(invoiceEdit.senderAddress.city)\r\n                            && <p>can't be empty</p>}\r\n                        </div>\r\n                        <input  \r\n                            type=\"text\"\r\n                            name=\"senderAddress.city\"\r\n                            value={invoiceEdit.senderAddress.city}\r\n                            onChange={(e) => formStateUpdate(e.target.name, e.target.value)}\r\n                            className={errorStylingEval(invoiceEdit.senderAddress.city) \r\n                            ? `createoredit-field-error` : `createoredit-field`}>\r\n                        </input>\r\n                    </div>\r\n                    <div className=\"createoredit-column-gap\"></div>\r\n                    <div className=\"createoredit-form-row-full-container f-clb\">\r\n                        <div className=\"f-sb\">\r\n                            <h4 className={errorStylingEval(invoiceEdit.senderAddress.postCode) \r\n                                && `createoredit-error-highlight`}>Post Code</h4>\r\n                            {errorStylingEval(invoiceEdit.senderAddress.postCode)\r\n                            && <p>can't be empty</p>}\r\n                        </div>\r\n                        <input \r\n                            type=\"text\"\r\n                            name=\"senderAddress.postCode\"\r\n                            value={invoiceEdit.senderAddress.postCode}\r\n                            onChange={(e) => formStateUpdate(e.target.name, e.target.value)}\r\n                            className={errorStylingEval(invoiceEdit.senderAddress.postCode) \r\n                                ? `createoredit-field-error` : `createoredit-field`}> \r\n                            </input>\r\n                    </div>\r\n                    {response !== 'mobile' && <div className=\"createoredit-column-gap\"></div>}\r\n                    {response !== 'mobile' &&\r\n                        <div className=\"createoredit-form-row-full-container f-clb\">\r\n                                <div className=\"f-sb\">\r\n                                    <h4 className={errorStylingEval(invoiceEdit.senderAddress.country) \r\n                                        && `createoredit-error-highlight`}>Country</h4>\r\n                                    {errorStylingEval(invoiceEdit.senderAddress.country)\r\n                                    && <p>can't be empty</p>}\r\n                                </div>\r\n                            <input \r\n                                type=\"text\"\r\n                                name=\"senderAddress.country\"\r\n                                value={invoiceEdit.senderAddress.country}\r\n                                onChange={(e) => formStateUpdate(e.target.name, e.target.value)}\r\n                                className={errorStylingEval(invoiceEdit.senderAddress.country) \r\n                                    ? `createoredit-field-error` : `createoredit-field`}> \r\n                            </input>\r\n                        </div>\r\n                    }\r\n                </div>\r\n                {response === 'mobile' &&\r\n                    <div className=\"createoredit-form-row-full-container f-clb\">\r\n                            <div className=\"f-sb\">\r\n                                <h4 className={errorStylingEval(invoiceEdit.senderAddress.country) \r\n                                    && `createoredit-error-highlight`}>Country</h4>\r\n                                {errorStylingEval(invoiceEdit.senderAddress.country)\r\n                                && <p>can't be empty</p>}\r\n                            </div>\r\n                        <input \r\n                            type=\"text\"\r\n                            name=\"senderAddress.country\"\r\n                            value={invoiceEdit.senderAddress.country}\r\n                            onChange={(e) => formStateUpdate(e.target.name, e.target.value)}\r\n                            className={errorStylingEval(invoiceEdit.senderAddress.country) \r\n                                ? `createoredit-field-error` : `createoredit-field`}> \r\n                        </input>\r\n                    </div>\r\n                }\r\n                <div className=\"createoredit-bill-margin\">\r\n                    <h2>Bill To</h2>\r\n                </div>\r\n                <div className=\"createoredit-form-row-full-container f-clb\">\r\n                    <div className=\"f-sb\">\r\n                        <h4 className={errorStylingEval(invoiceEdit.clientName) \r\n                                && `createoredit-error-highlight`}>Client's Name</h4>\r\n                        {errorStylingEval(invoiceEdit.clientName)\r\n                            && <p>can't be empty</p>}\r\n                    </div>\r\n                    <input  \r\n                        type=\"text\"\r\n                        name=\"clientName\"\r\n                        value={invoiceEdit.clientName}\r\n                        onChange={(e) => formStateUpdate(e.target.name, e.target.value)}\r\n                        className={errorStylingEval(invoiceEdit.clientName) \r\n                            ? `createoredit-field-error` : `createoredit-field`}>\r\n                    </input>\r\n                </div>\r\n                <div className=\"createoredit-form-row-full-container f-clb\">\r\n                    <div className=\"f-sb\">\r\n                        <h4 className={errorStylingEval(invoiceEdit.clientEmail) \r\n                                && `createoredit-error-highlight`}>Client's Email</h4>\r\n                        {errorStylingEval(invoiceEdit.clientEmail)\r\n                            && <p>can't be empty</p>}\r\n                    </div>\r\n                    <input  \r\n                        type=\"text\"\r\n                        name=\"clientEmail\"\r\n                        value={invoiceEdit.clientEmail}\r\n                        onChange={(e) => formStateUpdate(e.target.name, e.target.value)}\r\n                        className={errorStylingEval(invoiceEdit.clientEmail) \r\n                        ? `createoredit-field-error` : `createoredit-field`}>\r\n                    </input>\r\n                </div>\r\n                <div className=\"createoredit-form-row-full-container f-clb\">\r\n                    <div className=\"f-sb\">\r\n                        <h4 className={errorStylingEval(invoiceEdit.clientAddress.street) \r\n                                && `createoredit-error-highlight`}>Street Address</h4>\r\n                        {errorStylingEval(invoiceEdit.clientAddress.street)\r\n                            && <p>can't be empty</p>}\r\n                    </div>\r\n                    <input \r\n                        type=\"text\"\r\n                        name=\"clientAddress.street\"\r\n                        value={invoiceEdit.clientAddress.street}\r\n                        onChange={(e) => formStateUpdate(e.target.name, e.target.value)}\r\n                        className={errorStylingEval(invoiceEdit.clientAddress.street) \r\n                        ? `createoredit-field-error` : `createoredit-field`}> \r\n                    </input>\r\n                </div>\r\n                <div className=\"d-flex\">\r\n                    <div className=\"createoredit-form-row-full-container f-clb\">\r\n                        <div className=\"f-sb\">\r\n                            <h4 className={errorStylingEval(invoiceEdit.clientAddress.city) \r\n                                && `createoredit-error-highlight`}>City</h4>\r\n                            {emptyFields && invoiceEdit.clientAddress.city === ''\r\n                            && <p>can't be empty</p>}\r\n                        </div>\r\n                        <input \r\n                            type=\"text\"\r\n                            name=\"clientAddress.city\"\r\n                            value={invoiceEdit.clientAddress.city}\r\n                            onChange={(e) => formStateUpdate(e.target.name, e.target.value)}\r\n                            className={errorStylingEval(invoiceEdit.clientAddress.city) \r\n                            ? `createoredit-field-error` : `createoredit-field`}> \r\n                        </input>\r\n                    </div>\r\n                    <div className=\"createoredit-column-gap\"></div>\r\n                    <div className=\"createoredit-form-row-full-container f-clb\">\r\n                        <div className=\"f-sb\">\r\n                            <h4 className={errorStylingEval(invoiceEdit.clientAddress.postCode) \r\n                                && `createoredit-error-highlight`}>Post Code</h4>\r\n                            {errorStylingEval(invoiceEdit.clientAddress.postCode)\r\n                            && <p>can't be empty</p>}\r\n                        </div>\r\n                        <input \r\n                            type=\"text\"\r\n                            name=\"clientAddress.postCode\"\r\n                            value={invoiceEdit.clientAddress.postCode}\r\n                            onChange={(e) => formStateUpdate(e.target.name, e.target.value)}\r\n                            className={errorStylingEval(invoiceEdit.clientAddress.postCode) \r\n                            ? `createoredit-field-error` : `createoredit-field`}> \r\n                        </input>\r\n                    </div>\r\n                    {response !== 'mobile' && <div className=\"createoredit-column-gap\"></div>}\r\n                    {response !== 'mobile' &&\r\n                        <div className=\"createoredit-form-row-full-container f-clb\">\r\n                            <div className=\"f-sb\">\r\n                                <h4 className={errorStylingEval(invoiceEdit.clientAddress.country) \r\n                                        && `createoredit-error-highlight`}>Country</h4>\r\n                                {errorStylingEval(invoiceEdit.clientAddress.country)\r\n                                    && <p>can't be empty</p>}\r\n                            </div>\r\n                            <input \r\n                                type=\"text\"\r\n                                name=\"clientAddress.country\"\r\n                                value={invoiceEdit.clientAddress.country}\r\n                                onChange={(e) => formStateUpdate(e.target.name, e.target.value)}\r\n                                className={errorStylingEval(invoiceEdit.clientAddress.country) \r\n                                ? `createoredit-field-error` : `createoredit-field`}> \r\n                            </input>\r\n                        </div>\r\n                    }\r\n                </div>\r\n                {response === 'mobile' &&\r\n                    <div className=\"createoredit-form-row-full-container f-clb\">\r\n                        <div className=\"f-sb\">\r\n                            <h4 className={errorStylingEval(invoiceEdit.clientAddress.country) \r\n                                    && `createoredit-error-highlight`}>Country</h4>\r\n                            {errorStylingEval(invoiceEdit.clientAddress.country)\r\n                                && <p>can't be empty</p>}\r\n                        </div>\r\n                        <input \r\n                            type=\"text\"\r\n                            name=\"clientAddress.country\"\r\n                            value={invoiceEdit.clientAddress.country}\r\n                            onChange={(e) => formStateUpdate(e.target.name, e.target.value)}\r\n                            className={errorStylingEval(invoiceEdit.clientAddress.country) \r\n                            ? `createoredit-field-error` : `createoredit-field`}> \r\n                        </input>\r\n                    </div>\r\n                }\r\n                <div className=\"createoredit-invoice-top-gap\"></div>\r\n                <div className=\"d-md-flex\">\r\n                    <div className={`${idRef === undefined || INVOICE().status === 'draft' ? `d-none` : ``} createoredit-form-row-full-container \r\n                        createoredit-invoice-disabled f-clb`}>\r\n                        <h4>Invoice Date</h4>\r\n                        <div className=\"createoredit-date-disabled f-sb\">\r\n                            <h4><span>{dateFormat(invoiceEdit.createdAt)}</span></h4>\r\n                            <div className=\"createoredit-calendar-icon\"></div>\r\n                        </div>   \r\n                    </div>\r\n                    <div className={`${idRef !== undefined && INVOICE().status !== 'draft' ? `d-none` : ``} \r\n                            createoredit-form-row-full-container f-clb position-relative`}>\r\n                        <div className=\"f-sb\">\r\n                            <h4 className={errorStylingEval(invoiceEdit.createdAt) \r\n                                    && `createoredit-error-highlight`}>Invoice Date</h4>\r\n                            {emptyFields && invoiceEdit.createdAt === ''\r\n                                && <p>date must be selected</p>}\r\n                        </div>\r\n                        <div className=\"f-sb\">\r\n                            <div onClick={() => {setToggleCalendar(!toggleCalendar); \r\n                                setToggleTerms(false); calendarDateGenerator()}}\r\n                                className={`${errorStylingEval(invoiceEdit.createdAt) \r\n                                ? `createoredit-field-error` : `createoredit-field`} \r\n                                createoredit-date-active f-sb pointer`}> \r\n                                    <span>{invoiceEdit.createdAt === '' ? `Select Invoice Date` : dateFormat(invoiceEdit.createdAt)}</span>\r\n                                    <div className=\"createoredit-calendar-icon\"></div>\r\n                            </div>\r\n                        </div>\r\n                        {toggleCalendar && !toggleTerms && calendarModal()}\r\n                    </div>\r\n                    {response !== 'mobile' && <div className=\"createoredit-invoice-payment-gap\"></div>}\r\n                    <div className=\"createoredit-form-payment-terms-container position-relative\">\r\n                        <div className=\"createoredit-form-row-full-container f-clb\">\r\n                            <div className=\"f-sb\">\r\n                                <h4 className={errorStylingEval(invoiceEdit.paymentTerms) \r\n                                    && `createoredit-error-highlight`}>Payment Terms</h4>\r\n                                {errorStylingEval(invoiceEdit.paymentTerms)\r\n                                && <p className=\"text-right\">payment term must be selected</p>}\r\n                            </div>\r\n                            <div onClick ={() => {setToggleTerms(!toggleTerms); setToggleCalendar(false)}} \r\n                                className={`${errorStylingEval(invoiceEdit.paymentTerms) \r\n                                    ? `createoredit-field-error` : `createoredit-field`} f-sb pointer`}>\r\n                                <span className={`${invoiceEdit.paymentTerms !== null && `d-none`}`}>\r\n                                    Select Payment Status\r\n                                </span>\r\n                                <span className={`${invoiceEdit.paymentTerms == null && `d-none`}`}>\r\n                                    Net {invoiceEdit.paymentTerms} Day{invoiceEdit.paymentTerms > 1 ? 's' : ''}\r\n                                </span>\r\n                                <div className=\"f-c\">\r\n                                    <div className={`${toggleTerms \r\n                                        && `createoredit-option-arrow-clicked`} createoredit-option-arrow`}></div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className={`${toggleTerms && !toggleCalendar ? `createoredit-option-trans` : `d-none`} position-absolute w-100`}>\r\n                            {termsMapping}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"createoredit-form-row-full-container f-clb\">\r\n                    <div className=\"f-sb\">\r\n                        <h4 className={errorStylingEval(invoiceEdit.description) \r\n                                && `createoredit-error-highlight`}>Project / Description</h4>\r\n                        {emptyFields && invoiceEdit.description === ''\r\n                            && <p>can't be empty</p>}\r\n                    </div>\r\n                    <input \r\n                        type=\"text\"\r\n                        name=\"description\"\r\n                        value={invoiceEdit.description}\r\n                        onChange={(e) => formStateUpdate(e.target.name, e.target.value)}\r\n                        className={errorStylingEval(invoiceEdit.description) \r\n                            ? `createoredit-field-error` : `createoredit-field`}> \r\n                    </input>\r\n                </div>\r\n                <div className=\"createoredit-item-list-container\">\r\n                    <h5>Item List</h5>\r\n                    {response !== 'mobile' && \r\n                        <div className=\"d-flex createoredit-item-list-gap\">\r\n                            <div className=\"w-45\">\r\n                                <h4>Item Name</h4>\r\n                            </div>\r\n                            <div className=\"r-1\"></div>\r\n                            <div className=\"w-15\">\r\n                                <h4>Qty.</h4>\r\n                            </div>\r\n                            <div className=\"r-1\"></div>\r\n                            <div className=\"w-20\">\r\n                                <h4>Price</h4>\r\n                            </div>\r\n                            <div className=\"r-1\"></div>\r\n                            <div className=\"w-20\">\r\n                                <h4>Total</h4>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>\r\n                {response === 'mobile' ? itemsMappingMobile : itemsMapping}\r\n                <div \r\n                    onClick={() => {formStateUpdate('addItem', null, idTally);\r\n                                    setItemClicked(true);}}\r\n                    className={`${invoiceEdit.items.length === 0 \r\n                        && `createoredit-item-empty-button-gap`} \r\n                        ${itemClicked || invoiceEdit.items.length > 1 ? `d-none` : ``} createoredit-item-add-button pointer f-c`}>\r\n                    <h4>+ Add New Item</h4>\r\n                </div>\r\n                <div className={response === 'mobile' || itemClicked ? `createoredit-bottom-filler` : ``}>\r\n                    <div className=\"createoredit-bottom-filler-error-text f-clb\">\r\n                        <p className={!emptyFields && `d-none`}>- All fields must be added</p>\r\n                        <p className={!emptyItems && `d-none`}>- An item must be added</p>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const footerButtons = () => { \r\n        return (\r\n            <div className=\"createoredit-footer-outer-container f-c\">\r\n                <div className={`${idRef !== undefined ? `f-e f-sb` : `f-sb`} createoredit-footer-inner-container`}> \r\n                    <div onClick={() => {formStateUpdate('discard'); SETTOGGLECREATEEDIT(false)}}\r\n                        className={`${idRef !== undefined && `d-none`} createoredit-discard-button-container f-c pointer`}>\r\n                            <h3>Discard</h3>\r\n                    </div>\r\n                    <div className=\"d-flex\">\r\n                        <div onClick={() => SETTOGGLECREATEEDIT(false)}\r\n                            className={`${idRef === undefined && `d-none`} createoredit-cancel-button-container f-c pointer`}>\r\n                                <h3>Cancel</h3>\r\n                        </div>\r\n                        <div className={`${idRef !== undefined && `d-none`} createoredit-footer-button-gap`}></div>\r\n                        <div onClick={() => saveAndSendInvoiceToggle(false)}\r\n                            className={`${idRef !== undefined && `d-none`} createoredit-saveasdraft-button-container f-c pointer`}>\r\n                                {draftSpinner ? <ButtonReqSpinner /> : <h3>Save as Draft</h3>}\r\n                        </div>\r\n                        <div className=\"createoredit-footer-button-gap\"></div>\r\n                        <div onClick={() => saveChangesInvoiceToggle()}\r\n                            className={`${idRef === undefined && `d-none`} \r\n                                createoredit-savechanges-button-container f-c pointer position-relative`}>\r\n                            {saveChangeSpinner ? <ButtonReqSpinner /> : <h3>Save Changes</h3>}\r\n                        </div>\r\n                        <div onClick={() => saveAndSendInvoiceToggle(true)}\r\n                            className={`${idRef !== undefined && `d-none`} \r\n                                createoredit-saveandsend-button-container f-c pointer`}>\r\n                            {saveSendSpinner ? <ButtonReqSpinner /> : <h3>Save & Send</h3>}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div id=\"createoredit\">\r\n            <div className={`${response !== 'mobile' && createToggle \r\n                ? `createoredit-trans-sideways-in` : `createoredit-trans-sideways-out`} \r\n                    createoredit-master-container position-relative w-100`}>\r\n                {response === 'desktop' && \r\n                    <div className=\"createoredit-desktop-header-filler background-filler\"></div>\r\n                }\r\n                <div className=\"createoredit-tab-container background-filler\">\r\n                    <div className=\"createoredit-container\">\r\n                        {backHeader()}\r\n                        <div className={response === 'mobile' && `createoredit-transition`}>\r\n                            {title()}\r\n                            {formBody()}\r\n                        </div>\r\n                    </div>  \r\n                </div>\r\n                <div className=\"createoredit-scroller-side-filler background-filler\"></div>\r\n                {footerButtons()}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateOrEdit","import { NIGHTMODE, TOGGLENIGHTMODE } from '../redux/Store.js';\r\n\r\nconst Header = () => {\r\n\r\n    const reload = () => {\r\n        window.location.reload();\r\n    }\r\n\r\n    return (\r\n        <div id=\"header\" className=\"d-flex flex-row flex-xl-column align-items-center justify-content-between\">\r\n            <div className=\"logo-container f-c\">\r\n                <div onClick={() => reload()}className=\"logo pointer\"></div>\r\n            </div>\r\n            <div className=\"f-c flex-row flex-xl-column\">\r\n                <div onClick={() => TOGGLENIGHTMODE()} className=\"f-c switch-container\" >\r\n                    <div className={`${NIGHTMODE() ? `theme-night` : `theme-day`} theme pointer`}></div>\r\n                </div>\r\n                <div className=\"avatar-container f-c pointer\">\r\n                    <div className=\"avatar-image\"></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import { SETTOGGLEERRORMODAL, TOGGLECREATEEDIT, \r\n    RESPONSIVE } from '../redux/Store.js';\r\n\r\nconst ErrorModal = () => {\r\n\r\n    const response = RESPONSIVE();\r\n    const createoredit = TOGGLECREATEEDIT();\r\n\r\n    return (\r\n        <div id=\"errorModal\" className=\"d-flex\" \r\n            style={{ top: response === 'mobile' && createoredit ? '133%' : '50%'}}>\r\n            <div className=\"error-modal-page-container f-c error-fill-transition\">\r\n                <div className=\"error-modal-outer-container error-modal-transition\">\r\n                    <div className=\"error-modal-inner-container\">\r\n                        <h1>Error</h1>\r\n                        <div className=\"error-modal-content-spacing\">\r\n                            <h2>This is a demo version.  Changes cannot be saved.</h2>\r\n                        </div>\r\n                        <div className=\"f-ae\">\r\n                            <div onClick={() => SETTOGGLEERRORMODAL(false)}\r\n                                className=\"error-modal-ok-button-container f-c pointer\">\r\n                                <h3>Ok</h3>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorModal\r\n","import { monthsArray } from '../Arrays/Months';\r\nimport ButtonReqSpinner from './ButtonReqSpinner';\r\n\r\nimport { useState } from 'react';\r\nimport { INVOICE, MARKASPAIDINVOICE, SETTOGGLEDELETEMODAL, \r\n    SETTOGGLEVIEWER, SETTOGGLECREATEEDIT, HTTPRES, SETHTTPRES, \r\n    SETTOGGLEERRORMODAL, RESPONSIVE } from '../redux/Store.js';\r\n\r\nconst Viewer = () => {\r\n\r\n    const response = RESPONSIVE();\r\n    \r\n    const [viewInvoice, setViewInvoice] = useState(INVOICE());\r\n    const [markPaidSpinner, setMarkPaidSpinner] = useState(false);\r\n    const [clicked, setClicked] = useState(false);\r\n\r\n    if (HTTPRES() === \"Mark Paid Request Failed\") {\r\n        setTimeout(() => {\r\n            SETTOGGLEERRORMODAL(true);\r\n            setMarkPaidSpinner(false);\r\n        }, 500);\r\n    } \r\n    if (HTTPRES() === \"Mark Paid Request Fulfilled\") {\r\n        setTimeout(() => {\r\n            setClicked(true);\r\n            setMarkPaidSpinner(false);\r\n            SETTOGGLEVIEWER(false);\r\n            setViewInvoice({...viewInvoice, status: 'paid'});\r\n        }, 250); \r\n    }\r\n\r\n    const markPaid = () => {\r\n        setMarkPaidSpinner(true);\r\n        SETHTTPRES(\"Mark Paid Request Pending\");\r\n        MARKASPAIDINVOICE(viewInvoice.id);\r\n    }\r\n\r\n    const backHeader = () => {\r\n        return (\r\n            <div onClick={() => SETTOGGLEVIEWER(false)} \r\n                className=\"back-container pointer position-relative\">\r\n                <div className=\"back-arrow\"></div>\r\n                <div className=\"d-flex\">\r\n                    <h3>Go back</h3>\r\n                </div>\r\n                <div className=\"back-container-filler\"></div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const statusContainer = () => {\r\n        return (\r\n            <div className=\"viewer-status-outer-container\">\r\n                <div className=\"viewer-status-inner-container\">\r\n                    <div className={response === 'mobile' ? `f-ca` : `d-none`}>\r\n                        <h2>Status</h2>\r\n                        <div className={`payment-button-${viewInvoice.status} f-c payment-button-container`}>\r\n                            <div className=\"payment-status f-ca\">\r\n                                <div className={`dot-${viewInvoice.status} payment-dot`}></div>\r\n                                <h5>{viewInvoice.status === 'paid' ? `Paid` : viewInvoice.status === 'pending' ? `Pending` : `Draft`}</h5>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={response !== 'mobile' ? `f-sb` : `d-none`}>\r\n                        <div className=\"f-sb viewer-status-closeto-width\">\r\n                            <h2>Status</h2>\r\n                            <div className={`payment-button-${viewInvoice.status} f-c my-auto payment-button-container`}>\r\n                                <div className=\"payment-status f-c\">\r\n                                    <div className={`dot-${viewInvoice.status} payment-dot`}></div>\r\n                                    <h5>{viewInvoice.status === 'paid' ? `Paid` : viewInvoice.status === 'pending' ? `Pending` : `Draft`}</h5>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"d-flex\">\r\n                            <div onClick={() => {SETTOGGLECREATEEDIT(true); SETTOGGLEVIEWER(true)}} \r\n                                className=\"viewer-footer-edit-button-container f-c pointer\">\r\n                                <h3>Edit</h3>\r\n                            </div>\r\n                            <div className=\"viewer-footer-button-gap\"></div>\r\n                            <div onClick={() => SETTOGGLEDELETEMODAL(true)} className=\"viewer-footer-delete-button-container f-c pointer\">\r\n                                <h3>Delete</h3>\r\n                            </div>\r\n                            <div className={viewInvoice.status === 'paid' || viewInvoice.status === 'draft'\r\n                                ? `d-none` : `viewer-footer-button-gap`}>\r\n                            </div>\r\n                            <div onClick={() => markPaid()} \r\n                                className={`${viewInvoice.status === 'pending' \r\n                                    ? `viewer-footer-paid-button-container` \r\n                                    : clicked  && viewInvoice.status === 'paid' ? `viewer-footer-paid-button-animation`\r\n                                    : viewInvoice.status === 'paid' && !clicked ? `d-none` : ``} \r\n                                    f-c pointer position-relative`}>\r\n                                {markPaidSpinner ? <ButtonReqSpinner /> : \r\n                                    viewInvoice.status === 'pending' &&  <h3>Mark as Paid</h3> }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    let grandTotal = 0;\r\n\r\n    const calculateItemTotal = (item) => {\r\n        const numberTotal = (item.quantity * item.price);\r\n        grandTotal = grandTotal + numberTotal;\r\n        const total = `£ ${numberTotal.toFixed(2)}`;\r\n        return total;\r\n    }\r\n\r\n    const priceItemsMapping = viewInvoice.items.map(item => {\r\n\r\n        return (\r\n            <div key={item.name} className=\"viewer-main-pricing-item-container f-sb\">\r\n                <h3 className=\"w-40\">{item.name}</h3>\r\n                <h6 className=\"w-20 text-center\">{item.quantity}</h6>\r\n                <h6 className=\"w-15 text-right\">£ {item.price.toFixed(2)}</h6>\r\n                <h6 className=\"w-25 text-right\">£ {(item.quantity * item.price).toFixed(2)}</h6>\r\n            </div> \r\n        );\r\n    });\r\n\r\n    const priceItemsMappingMobile = viewInvoice.items.map(item => {\r\n\r\n        return (\r\n            <div key={item.name} className=\"viewer-main-pricing-item-container f-sb\">\r\n                <div className={`${item.name === '' && `d-none`} f-clb`}>\r\n                    <h3>{item.name}</h3>\r\n                    <h3><span>{`${item.quantity} x £ ${item.price.toFixed(2)}`}</span></h3>\r\n                </div>\r\n                <div className={`${item.name === '' && `d-none`} f-c`}>\r\n                    <h3>{calculateItemTotal(item)}</h3>\r\n                </div>\r\n                <div className={`${item.name !== '' && `d-none`} f-c mx-auto`}>\r\n                    <h3>No Items Have Been Added</h3>\r\n                </div>\r\n            </div> \r\n        );\r\n    });\r\n\r\n    const dateFormat = (input) => {\r\n        const day= input.slice(8, 10);\r\n        let month = monthsArray[Number(input.slice(5, 7)) - 1];\r\n        const year = input.slice(0, 4);\r\n        const formatted = `${day} ${month} ${year}`;\r\n        return formatted;\r\n    }\r\n\r\n    const currencyFormat = (amount) => {\r\n        const output = `£ ${new Intl.NumberFormat ('en-UK', { style: 'currency', currency: 'GBP'}).format(amount).toString().slice(1)}`;\r\n        return output;\r\n    }\r\n\r\n    const addressEval = (input) => {\r\n        let emptyTally = 0;\r\n        Object.values(input).forEach(field => {\r\n            if (field === '') {\r\n                emptyTally += 1;\r\n            }\r\n        })\r\n        return emptyTally > 0 ? false : true; \r\n    }\r\n\r\n    const mainContainer = () => {\r\n        return (\r\n            <div className=\"viewer-main-outer-container\">\r\n                <div className=\"viewer-main-inner-container\">\r\n                    <div className=\"viewer-main-full-span-container f-sb\"> \r\n                        <div className=\"viewer-main-id-subscription-container f-clb\">\r\n                            <h3><span>#</span>{viewInvoice.id}</h3>\r\n                            <h2>{viewInvoice.description === '' \r\n                                ? `No description Added` : viewInvoice.description}</h2>\r\n                        </div>\r\n                        <div className={addressEval(viewInvoice.senderAddress) ? `viewer-main-address-container f-clb` : `d-none`}>\r\n                            <h6>{viewInvoice.senderAddress.street}</h6>\r\n                            <h6>{viewInvoice.senderAddress.city}</h6>\r\n                            <h6>{viewInvoice.senderAddress.postCode}</h6>\r\n                            <h6>{viewInvoice.senderAddress.country}</h6>\r\n                        </div>\r\n                        <div className={!addressEval(viewInvoice.senderAddress) ? `viewer-main-address-container f-clb` : `d-none`}>\r\n                            <h6>Sender Address Has Not Been Entered</h6>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"viewer-main-date-bill-email-container f-sb\">\r\n                        <div className=\"f-clb\">   \r\n                            <div className=\"viewer-main-due-container f-clb\">\r\n                                <h2>Invoice Date</h2>\r\n                                <p>{viewInvoice.createdAt === '' ? `No Date Selected` \r\n                                    : dateFormat(viewInvoice.createdAt)}</p>\r\n                            </div>\r\n                            <div className=\"viewer-main-due-container f-clb\">\r\n                                <h2>Payment Due</h2>\r\n                                <p>{viewInvoice.paymentDue === '' ? `No Date Selected` \r\n                                    : dateFormat(viewInvoice.paymentDue)}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"f-clb\">\r\n                            <div className=\"viewer-main-bill-container f-clb\">\r\n                                <h2>Bill To</h2>\r\n                                <p>{viewInvoice.clientName === '' ? `Not Entered` \r\n                                    : viewInvoice.clientName}</p>\r\n                            </div>\r\n                            <div className=\"viewer-main-bill-address-outer-container\">\r\n                                <div className={addressEval(viewInvoice.clientAddress) \r\n                                        ? `viewer-main-bill-address-inner-container f-sb flex-column` : `d-none`}>\r\n                                    <h6>{viewInvoice.clientAddress.street}</h6>\r\n                                    <h6>{viewInvoice.clientAddress.city}</h6>\r\n                                    <h6>{viewInvoice.clientAddress.postCode}</h6>\r\n                                    <h6>{viewInvoice.clientAddress.country}</h6>\r\n                                </div>\r\n                                <div className={!addressEval(viewInvoice.clientAddress) \r\n                                        ? `viewer-main-bill-address-inner-container f-sb flex-column` : `d-none`}>\r\n                                    <h6>Client Address Has Not Been Entered</h6>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"viewer-main-email-container\">\r\n                            <div className=\"viewer-main-sent-inner-container f-clb\">\r\n                                <h2>Sent to</h2>\r\n                                {viewInvoice.clientEmail === '' \r\n                                    ? <h2>Email not entered</h2> : <p>{viewInvoice.clientEmail}</p>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"viewer-main-full-span-container f-ca\">\r\n                        \r\n                        <div className=\"viewer-main-right-column-container\"></div>\r\n                    </div>\r\n                    <div className=\"viewer-main-pricing-outer-container\">\r\n                        <div className=\"viewer-main-pricing-inner-container\">\r\n                            <div className=\"f-sb\">\r\n                                <h6 className=\"w-40\">Item Name</h6>\r\n                                <h6 className=\"w-20 text-center\">QTY.</h6>\r\n                                <h6 className=\"w-15 text-right\">Price</h6>\r\n                                <h6 className=\"w-25 text-right\">Total</h6>\r\n                            </div>\r\n                            {priceItemsMapping}\r\n                        </div>\r\n                        <div className=\"viewer-main-pricing-grand-total-outer-container\">\r\n                            <div className=\"viewer-main-pricing-grand-total-inner-container\">\r\n                                <div className={`${grandTotal === 0 && `d-none`} f-ca`}>\r\n                                    <h6> Amount Due</h6>\r\n                                    <h1>{`£ ${grandTotal.toFixed(2)}`}</h1>\r\n                                </div>\r\n                                <div className={`${grandTotal !== 0 && `d-none`} f-c`}>\r\n                                    <h1>No Total Calculated</h1>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>  \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const mainContainerMobile = () => {\r\n        return (\r\n            <div className=\"viewer-main-outer-container\">\r\n                <div className=\"viewer-main-inner-container\">\r\n                    <div className=\"viewer-main-full-span-container f-ca\"> \r\n                        <div className=\"viewer-main-left-column-container\">\r\n                            <div className=\"viewer-main-id-subscription-container f-clb\">\r\n                                <h3><span>#</span>{viewInvoice.id}</h3>\r\n                                <h2>{viewInvoice.description === '' \r\n                                    ? `No description Added` : viewInvoice.description}</h2>\r\n                            </div>\r\n                            <div className={addressEval(viewInvoice.senderAddress) ? `viewer-main-address-container f-clb` : `d-none`}>\r\n                                <h6>{viewInvoice.senderAddress.street}</h6>\r\n                                <h6>{viewInvoice.senderAddress.city}</h6>\r\n                                <h6>{viewInvoice.senderAddress.postCode}</h6>\r\n                                <h6>{viewInvoice.senderAddress.country}</h6>\r\n                            </div>\r\n                            <div className={!addressEval(viewInvoice.senderAddress) ? `viewer-main-address-container f-clb` : `d-none`}>\r\n                                <h6>Sender Address Has Not Been Entered</h6>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"viewer-main-right-column-container\"></div>\r\n                    </div>\r\n                    <div className=\"viewer-main-full-span-container f-ca\">\r\n                        <div className=\"viewer-main-left-column-container\">   \r\n                            <div className=\"viewer-main-invoice-container f-clb\">\r\n                                <h2>Invoice Date</h2>\r\n                                <p>{viewInvoice.createdAt === '' ? `No Date Selected` \r\n                                    : dateFormat(viewInvoice.createdAt)}</p>\r\n                            </div>\r\n                            <div className=\"viewer-main-due-container f-clb\">\r\n                                <h2>Payment Due</h2>\r\n                                <p>{viewInvoice.paymentDue === '' ? `No Date Selected` \r\n                                    : dateFormat(viewInvoice.paymentDue)}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"viewer-main-right-column-container\">\r\n                            <div className=\"viewer-main-bill-container f-clb\">\r\n                                <h2>Bill To</h2>\r\n                                <p>{viewInvoice.clientName === '' ? `Not Entered` \r\n                                    : viewInvoice.clientName}</p>\r\n                            </div>\r\n                            <div className=\"viewer-main-bill-address-outer-container\">\r\n                                <div className={addressEval(viewInvoice.clientAddress) \r\n                                        ? `viewer-main-bill-address-inner-container f-sb flex-column` : `d-none`}>\r\n                                    <h6>{viewInvoice.clientAddress.street}</h6>\r\n                                    <h6>{viewInvoice.clientAddress.city}</h6>\r\n                                    <h6>{viewInvoice.clientAddress.postCode}</h6>\r\n                                    <h6>{viewInvoice.clientAddress.country}</h6>\r\n                                </div>\r\n                                <div className={!addressEval(viewInvoice.clientAddress) \r\n                                        ? `viewer-main-bill-address-inner-container f-sb flex-column` : `d-none`}>\r\n                                    <h6>Client Address Has Not Been Entered</h6>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"viewer-main-full-span-container f-ca\">\r\n                        <div className=\"viewer-main-left-column-container\">\r\n                            <div className=\"viewer-main-sent-outer-container\">\r\n                                <div className=\"viewer-main-sent-inner-container f-clb\">\r\n                                    <h2>Sent to</h2>\r\n                                    {viewInvoice.clientEmail === '' \r\n                                        ? <h2>Email not entered</h2> : <p>{viewInvoice.clientEmail}</p>}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"viewer-main-right-column-container\"></div>\r\n                    </div>\r\n                    <div className=\"viewer-main-pricing-outer-container\">\r\n                        <div className=\"viewer-main-pricing-inner-container\">\r\n                            {priceItemsMappingMobile}\r\n                        </div>\r\n                        <div className=\"viewer-main-pricing-grand-total-outer-container\">\r\n                            <div className=\"viewer-main-pricing-grand-total-inner-container\">\r\n                                <div className={`${grandTotal === 0 && `d-none`} f-ca`}>\r\n                                    <h6> Amount Due</h6>\r\n                                    <h1>{`£ ${grandTotal.toFixed(2)}`}</h1>\r\n                                </div>\r\n                                <div className={`${grandTotal !== 0 && `d-none`} f-c`}>\r\n                                    <h1>No Total Calculated</h1>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>  \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const buttonsFooter = () => {\r\n        return (\r\n            <div className=\"viewer-footer-outer-container\">\r\n                <div className=\"viewer-footer-inner-container f-e\">\r\n                    <div onClick={() => {SETTOGGLECREATEEDIT(true); SETTOGGLEVIEWER(true)}} \r\n                        className=\"viewer-footer-edit-button-container f-c pointer\">\r\n                        <h3>Edit</h3>\r\n                    </div>\r\n                    <div className=\"viewer-footer-button-gap\"></div>\r\n                    <div onClick={() => SETTOGGLEDELETEMODAL(true)} className=\"viewer-footer-delete-button-container f-c pointer\">\r\n                        <h3>Delete</h3>\r\n                    </div>\r\n                    <div className={viewInvoice.status === 'paid' || viewInvoice.status === 'draft'\r\n                        ? `d-none` : `viewer-footer-button-gap`}></div>\r\n                    <div onClick={() => markPaid()} \r\n                        className={`${viewInvoice.status === 'pending' \r\n                            ? `viewer-footer-paid-button-container` \r\n                            : clicked  && viewInvoice.status === 'paid' ? `viewer-footer-paid-button-animation`\r\n                            : viewInvoice.status === 'paid' && !clicked ? `d-none` : ``} \r\n                            f-c pointer position-relative`}>\r\n                        {markPaidSpinner ? <ButtonReqSpinner /> : \r\n                            viewInvoice.status === 'pending' &&  <h3>Mark as Paid</h3> }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div id=\"viewer\" className=\"d-flex flex-column\">\r\n            <div className=\"viewer-container\">\r\n                {backHeader()} \r\n                <div className=\"viewer-transition\">  \r\n                    {statusContainer()}   \r\n                    {response === 'mobile' ? mainContainerMobile() : mainContainer()}\r\n                </div>  \r\n            </div>\r\n            {response === 'mobile' && buttonsFooter()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Viewer\r\n","import { useState } from 'react';\r\nimport ButtonReqSpinner from './ButtonReqSpinner';\r\nimport { INVOICE, SETTOGGLEVIEWER, SETTOGGLEDELETEMODAL, \r\n    DELETEINVOICE, HTTPRES, SETHTTPRES, \r\n    SETTOGGLEERRORMODAL } from '../redux/Store.js';\r\n\r\nconst DeleteModal = () => {\r\n\r\n    const deletingId = INVOICE().id;\r\n\r\n    const [deleteSpinner, setDeleteSpinner] = useState(false);\r\n    \r\n    if (HTTPRES() === \"Delete Request Failed\") {\r\n        SETTOGGLEDELETEMODAL(false);\r\n        SETTOGGLEERRORMODAL(true); \r\n    }\r\n    if (HTTPRES() === \"Delete Request Fulfilled\") {\r\n        SETTOGGLEDELETEMODAL(false);\r\n        SETTOGGLEVIEWER(false);\r\n    }\r\n\r\n    const confirmDelete = () => {\r\n        setDeleteSpinner(true);   \r\n        SETHTTPRES(\"Delete Request Pending\");\r\n        DELETEINVOICE(deletingId); \r\n    }\r\n\r\n    return (\r\n        <div id=\"deleteModal\" className=\"d-flex f-c\">\r\n            <div className=\"delete-modal-page-container f-c delete-fill-transition\">\r\n                <div className=\"delete-modal-outer-container delete-modal-transition\">\r\n                    <div className=\"delete-modal-inner-container\">\r\n                        <h1>Confirm Deletion</h1>\r\n                        <div className=\"delete-modal-content-spacing\">\r\n                            <h2>Are you sure you want to delete invoice\r\n                            #{deletingId}? This action cannot be undone.</h2>\r\n                        </div>\r\n                        <div className=\"f-ae\">\r\n                            <div onClick={() => SETTOGGLEDELETEMODAL(false)}\r\n                                className=\"delete-modal-cancel-button-container f-c pointer\">\r\n                                <h3>Cancel</h3>\r\n                            </div>\r\n                            <div className=\"delete-modal-button-gap\"></div>\r\n                            <div onClick={() => confirmDelete()} \r\n                                className=\"delete-modal-delete-button-container f-c pointer position-relative\">\r\n                                {deleteSpinner ? <ButtonReqSpinner /> : <h3>Delete</h3>} \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DeleteModal\r\n","import CreateOrEdit from './components/CreateOrEdit';\r\nimport Header from './components/Header';\r\nimport List_Main from './components/List_Main';\r\nimport ErrorModal from './components/ErrorModal';\r\nimport Viewer from './components/Viewer';\r\nimport DeleteModal from './components/DeleteModal';\r\nimport './App.scss';\r\nimport { NIGHTMODE, \r\n  TOGGLEVIEWER, TOGGLECREATEEDIT, TOGGLEDELETEMODAL,\r\n  TOGGLEERRORMODAL, SETTOGGLECREATEEDIT, RESPONSIVE } from './redux/Store.js';\r\n\r\n\r\nconst App = () => {\r\n\r\n  \r\n\r\n  const response = RESPONSIVE();\r\n\r\n  const createToggle = TOGGLECREATEEDIT();\r\n  const viewerToggle = TOGGLEVIEWER();\r\n  const errorToggle = TOGGLEERRORMODAL();\r\n  const deleteToggle = TOGGLEDELETEMODAL();\r\n\r\n  const bodyScroller = document.body;\r\n\r\n\r\n\r\n  if (createToggle && response !== 'mobile') {\r\n    window.scrollTo(0, 0);\r\n    bodyScroller.style.overflow = 'hidden';\r\n  } else bodyScroller.style.overflow = 'auto';\r\n\r\n  return (\r\n    <div className={`${NIGHTMODE() ? 'night-mode' \r\n      : 'day-mode'} window-height w-100 h-100 position-relative`}>\r\n      {errorToggle && <ErrorModal />}\r\n      {deleteToggle && <DeleteModal />}\r\n      {deleteToggle && <div className=\"modal-trans-background\"></div>}\r\n      {errorToggle && response === 'mobile' && createToggle \r\n        ? <div className=\"modal-mobile-createoredit-background\"></div>\r\n        : errorToggle ? <div className=\"modal-trans-background\"></div>\r\n        : ``\r\n      }\r\n      <div className=\"d-flex flex-column flex-xl-row position-relative w-100\">\r\n        <Header /> \r\n        <div className=\"d-flex w-100\">\r\n          {createToggle && <CreateOrEdit />}\r\n          {createToggle && \r\n            <div onClick ={() => SETTOGGLECREATEEDIT(false)}\r\n              className=\"createoredit-trans-background\">\r\n            </div>\r\n          }\r\n          <div className=\"app-container\">\r\n            {viewerToggle ? <Viewer /> : <List_Main />}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'hooks-for-redux';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const monthsArray = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'June', 'July',\r\n        'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];"],"sourceRoot":""}