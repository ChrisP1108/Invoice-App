{"version":3,"sources":["components/List.js","components/Loading.js","redux/fetchUrl.js","redux/Store.js","components/Invoices.js","Arrays/Filters.js","Arrays/Options.js","Schema-Invoice.js","components/CreateOrEdit.js","components/Header.js","components/ButtonReqSpinner.js","components/ErrorModal.js","components/Viewer.js","components/DeleteModal.js","App.js","reportWebVitals.js","index.js"],"names":["List","list","invoiceList","useState","toggleFilter","setToggleFilter","draftFilter","setDraftFilter","pendingFilter","setPendingFilter","paidFilter","setPaidFilter","filterInvoices","type","filtered","filter","invoice","status","toggleFilterType","noInvoices","className","length","loadingError","filterItemMapping","filterItems","map","item","eval","checkedValue","onClick","name","defaultChecked","id","loadedEval","createNewInvoice","setInvoice","setToggleCreateEdit","listHeader","loadingEval","listOutput","Loading","Url","SERVERLIST","httpStatusAndReset","res","setHttpRes","setTimeout","fetchData","a","fetch","catch","err","console","log","undefined","data","json","fetchInvoices","delReq","method","then","paidUpdateReq","store","headers","body","JSON","stringify","createReduxModule","initInvoices","addInvoice","markPaidInvoice","paidInvoice","updateInvoice","deleteInvoice","delInvoice","setToggleFormat","toggle","toggleNightMode","nightMode","setToggleDeleteModal","toggleDeleteModal","setToggleErrorModal","toggleErrorModal","setToggleViewer","toggleViewer","toggleCreateEdit","httpRes","Invoices","invoiceMapping","clientName","paymentDue","total","optionTerms","days","Schema","createdAt","description","paymentTerms","clientEmail","senderAddress","street","city","postCode","country","clientAddress","items","quantity","price","ItemAddSchema","CreateOrEdit","input","itemKeyId","invoiceEdit","setInvoiceEdit","toggleTerms","setToggleTerms","formStateUpdate","value","indexId","Number","splice","push","termsMapping","option","itemsMapping","itemTotal","toFixed","indexOf","onChange","e","target","Header","window","location","reload","ButtonReqSpinner","ErrorModal","Viewer","viewInvoice","setViewInvoice","markPaidSpinner","setMarkPaidSpinner","grandTotal","priceItemsMapping","numberTotal","calculateItemTotal","DeleteModal","deletingId","deleteSpinner","setDeleteSpinner","App","fetchedList","setFetchedList","toggleFormat","getInvoices","monthsArray","dateFormat","day","slice","month","year","formattedList","forEach","amount","Intl","NumberFormat","style","currency","format","toString","listFormatter","createToggle","viewerToggle","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.373636f0.chunk.js","sourcesContent":["import Loading from './Loading';\r\nimport Invoices from './Invoices';\r\nimport { setToggleCreateEdit, invoiceList, setInvoice } from '../redux/Store.js';\r\nimport { useState } from 'react';\r\nimport { filterItems } from '../Arrays/Filters';\r\n\r\nconst List = () => {\r\n\r\n    const list = invoiceList();\r\n\r\n    const [toggleFilter, setToggleFilter] = useState(false);\r\n    const [draftFilter, setDraftFilter] = useState(false);\r\n    const [pendingFilter, setPendingFilter] = useState(false);\r\n    const [paidFilter, setPaidFilter] = useState(false);\r\n\r\n    const filterInvoices = () => {\r\n        const type = draftFilter ? 'draft' \r\n            : pendingFilter ? 'pending'\r\n            : paidFilter ? 'paid' : '';\r\n        const filtered = (list.filter(invoice => \r\n            invoice.status === type));\r\n        return type === '' ? list : filtered;\r\n        \r\n    }\r\n\r\n    const toggleFilterType = (type) => {\r\n        switch(type) {\r\n            case 'Draft':\r\n                setDraftFilter(!draftFilter)\r\n                setPendingFilter(false);\r\n                setPaidFilter(false);\r\n                break;\r\n            case 'Pending':\r\n                setDraftFilter(false)\r\n                setPendingFilter(!pendingFilter);\r\n                setPaidFilter(false);\r\n                break;\r\n            case 'Paid':\r\n                setDraftFilter(false)\r\n                setPendingFilter(false);\r\n                setPaidFilter(!paidFilter);\r\n                break;\r\n            default:\r\n                setDraftFilter(false)\r\n                setPendingFilter(false);\r\n                setPaidFilter(false);\r\n                break;\r\n        }\r\n    }\r\n\r\n    const noInvoices = () => {\r\n        return (\r\n            <div className=\"f-ca flex-column no-invoices-container invoice-trans\">\r\n                <div className=\"no-invoices-logo\"></div>\r\n                <div>\r\n                    <h1>{list.length === 0\r\n                        ? `There is nothing here` : `No Results`}</h1>\r\n                </div>\r\n                <div className=\"f-ca flex-column no-invoices-text-margin\">\r\n                    <h2>{list.length === 0 \r\n                        ? `Create an invoice by clicking the` \r\n                        : `No invoices based upon the status`}</h2>\r\n                    <h2><span className=\"no-invoices-space\">\r\n                        {list.length === 0 ? 'New' : draftFilter ? 'Draft' \r\n                        : pendingFilter ? 'Pending' \r\n                        : 'Paid'}</span>\r\n                        {list.length === 0  \r\n                        ? `button and get started` : ` were found`}</h2>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const loadingError = () => {\r\n        return (\r\n            <div className=\"f-ca flex-column no-invoices-container-error invoice-trans\">\r\n                <div className=\"no-invoices-error-logo\"></div>\r\n                <div>\r\n                    <h1>Something went wrong</h1>\r\n                </div>\r\n                <div className=\"f-ca flex-column no-invoices-text-margin\">\r\n                    <h2>Try refreshing the page</h2>\r\n                    <h2>or check your internet connection</h2>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const filterItemMapping = filterItems.map(item => {\r\n        return (\r\n            <div key={item.id}\r\n                className={`${eval(item.checkedValue) && `list-filter-modal-selected`} \r\n                list-filter-modal-item`} onClick ={() => {toggleFilterType(item.name); setToggleFilter(!toggleFilter)}}>\r\n                <input className=\"checkbox d-none\" type=\"checkbox\" defaultChecked={eval(item.checkedValue)}></input>\r\n                <h3>{item.name}</h3>\r\n            </div>\r\n        )\r\n    });\r\n\r\n    const loadedEval = () => {\r\n        if (list[0] === \"loading\" || list[0] === \"error\") {\r\n            return false;       \r\n        } else return true\r\n    }\r\n\r\n    const createNewInvoice = () => {\r\n        setInvoice([]);\r\n        loadedEval() && setToggleCreateEdit(true);\r\n    }\r\n\r\n    const listHeader = () => {\r\n        return (\r\n            <div className=\"row m-0 list-container-filter d-flex justify-content-between position-relative\">\r\n                <div className=\"col-5 ns d-flex flex-column justify-content-around\">\r\n                    <h1>Invoices</h1>\r\n                    <h2>{list[0] === 'loading' ? `Loading invoices`\r\n                            : list[0] === 'error' ? `Error`\r\n                            : list.length === 0 ? `No invoices` \r\n                            : list.length === 1 ? `1 invoice`\r\n                            : `${list.length} invoices`}</h2>\r\n                </div>\r\n                <div className=\"col-7 ns f-ae pointer\">\r\n                    <div className=\"d-flex\">\r\n                        <div className=\"d-flex\">\r\n                            <div onClick={() => loadedEval() && list.length > 0 \r\n                                && setToggleFilter(!toggleFilter)} className=\"d-flex\">\r\n                                <h3>Filter</h3>\r\n                                <div className=\"filter-container f-c\">\r\n                                    <div className={`${toggleFilter && `filter-arrow-clicked`} filter-arrow`}></div>\r\n                                </div>\r\n                            </div>\r\n                            <div className={`${toggleFilter ? `list-filter-modal-trans-on`\r\n                                : loadedEval() ? `list-filter-modal-trans-off` : `d-none`} list-filter-modal position-absolute`}>\r\n                                <div className=\"list-modal-outer-container\">\r\n                                    <div className=\"d-flex flex-column h-100 justify-content-between\">\r\n                                        {filterItemMapping}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div onClick={() => createNewInvoice()}\r\n                        className=\"button-container pointer f-c\">\r\n                        <div className=\"f-c\">\r\n                            <div className=\"button-circle f-c\">\r\n                                <div className=\"button-icon\"></div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"button\"><span>New</span></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n    const loadingEval = () => {\r\n        return (\r\n            list[0] === 'loading' ? <Loading />\r\n            : list[0] === 'error' ? loadingError() \r\n            : filterInvoices().length === 0 ? noInvoices()\r\n            : list.length > 0 ? <Invoices listOutput={filterInvoices()} />\r\n            : noInvoices()\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div id=\"list\">\r\n            <div className=\"list-container\">\r\n                {listHeader()}\r\n                <div className=\"invoice-top-margin\"></div>\r\n                {loadingEval()}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default List\r\n","const Loading = () => {\r\n    return (\r\n        <div id=\"loading\" className=\"invoice-trans\">\r\n            <div className=\"lds-default d-flex mx-auto margin\">\r\n                <div></div><div></div><div></div>\r\n                <div></div><div></div><div></div><div></div>\r\n                <div></div><div></div><div></div><div></div>\r\n                <div></div>\r\n            </div>\r\n            <div className=\"f-c mt-5\">\r\n                <h1>Loading . . .</h1>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading\r\n\r\n","export const Url = 'http://localhost:5000/invoices';\r\n\r\n// Raw Github db.json\r\n\r\n    // 'https://raw.githubusercontent.com/ChrisP1108/Invoice-App/list/db.json';\r\n\r\n\r\n","import { Url } from './fetchUrl';\r\nimport { createReduxModule } from 'hooks-for-redux';\r\n\r\nlet SERVERLIST = [];\r\n\r\n// Redux Store Contains Both State And HTTP Request Management\r\n\r\n// HTTP Requests & State Update\r\n\r\n    // HTTP Response Timer.  Sets HTTP Response Status State And Reverts Back To Starting Default After 1 Second\r\n\r\n    const httpStatusAndReset = (res) => {\r\n        setHttpRes(res);\r\n        setTimeout(() => {\r\n            setHttpRes(\"No Request Made\");\r\n        }, 500);\r\n    }\r\n\r\n    // GET INVOICES - Sent To App.Js For Formatting\r\n\r\n    const fetchInvoices = async () => { // HTTP GET\r\n        const res = await fetch(Url)\r\n        .catch((err) => console.log(err));     \r\n        if (res === undefined) {\r\n            const data = [\"error\"]\r\n            return data;\r\n        } else {\r\n            const data = await res.json();\r\n            SERVERLIST = data;\r\n            return data;\r\n        }\r\n    }\r\n\r\n    export const fetchData = fetchInvoices();\r\n\r\n    // DELETE INVOICE\r\n\r\n    const delInvoice = (store, id) => { // STATE DELETE\r\n        delReq(id);\r\n        const updateState = store.filter(invoice => invoice.id !== id);\r\n        return updateState;\r\n    }\r\n\r\n    const delReq = async (id) => {\r\n        const res = await fetch(`${Url}/${id}`, { // HTTP DELETE\r\n            method: 'DELETE'\r\n        })\r\n        .then(() => httpStatusAndReset(\"Delete Request Fulfilled\"))\r\n        .catch(() => httpStatusAndReset(\"Delete Request Failed\")); \r\n    }\r\n\r\n    // MARK INVOICE PAID\r\n\r\n    const paidInvoice = (store, id) => { // STATE PAID\r\n        paidUpdateReq(store, id);\r\n        const state = store.map(item => item.id === id \r\n            ? {...item, status: 'paid'} : item);\r\n        return state;\r\n    }\r\n\r\n    const paidUpdateReq = async (store, id) => { // HTTP PUT\r\n        const invoice = SERVERLIST.filter(item => \r\n            item.id === id\r\n        );\r\n        const res = await fetch(`${Url}/${id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({...invoice[0], status: 'paid'})\r\n        })\r\n        .then((res) => httpStatusAndReset(\"Mark Paid Request Fulfilled\"))\r\n        .catch((err) => httpStatusAndReset(\"Mark Paid Request Failed\")); \r\n    }\r\n\r\n// Invoice List - Fetched Data Is Modified in App.Js To Reformat Dates And Currencies And Then Sent To Invoice List\r\n\r\n    const INVOICE_LIST = ['loading']\r\n\r\n    export const [invoiceList, {initInvoices, addInvoice, markPaidInvoice, updateInvoice, deleteInvoice}] = \r\n        createReduxModule('invoice', INVOICE_LIST, {\r\n            initInvoices: (store, invoice) => invoice,\r\n            addInvoice: (store, invoice) => [...store, invoice],\r\n            markPaidInvoice: (store, id) => paidInvoice(store, id),\r\n            updateInvoice: (store, invoice) => (store.map((item) => item.id === invoice.id ? invoice : item)),\r\n            deleteInvoice: (store, id) =>  delInvoice(store, id)\r\n        });\r\n\r\n// Invoice Formatted Toggle\r\n\r\n    const FORMATTOGGLE = false;\r\n        \r\n    export const [toggleFormat, {setToggleFormat}] =\r\n        createReduxModule('formatToggle', FORMATTOGGLE, {\r\n            setToggleFormat: (toggle) => toggle\r\n        });\r\n\r\n// Invoice Content For Viewer/Editor\r\n\r\n    const INVOICE = [];\r\n\r\n    export const [invoice, {setInvoice}] = \r\n        createReduxModule('invoiceSet', INVOICE, {\r\n            setInvoice: (store, invoice) => invoice\r\n        });\r\n\r\n// NightMode Toggler\r\n\r\n    const NIGHTMODE = true;\r\n\r\n    export const [nightMode, {toggleNightMode}] = \r\n        createReduxModule('nightToggle', NIGHTMODE, {\r\n            toggleNightMode: (toggle) => !toggle\r\n        });\r\n\r\n// Delete Modal Toggle\r\n\r\n    const DELETEMODALTOGGLE = false;\r\n        \r\n    export const [toggleDeleteModal, {setToggleDeleteModal}] =\r\n        createReduxModule('deleteToggle', DELETEMODALTOGGLE, {\r\n            setToggleDeleteModal: (store, toggle) => toggle\r\n        });\r\n\r\n// Error Modal Toggle\r\n\r\n    const ERRORMODALTOGGLE = false;\r\n        \r\n    export const [toggleErrorModal, {setToggleErrorModal}] =\r\n        createReduxModule('errorToggle', ERRORMODALTOGGLE, {\r\n            setToggleErrorModal: (store, toggle) => toggle\r\n        });\r\n\r\n\r\n// Viewer Toggle\r\n\r\n    const VIEWERTOGGLE = false;\r\n    \r\n    export const [toggleViewer, {setToggleViewer}] =\r\n        createReduxModule('viewerToggle', VIEWERTOGGLE, {\r\n            setToggleViewer: (store, toggle) => toggle\r\n        });\r\n\r\n// Create Or Edit Invoice Toggler\r\n\r\n    const CreateEditTOGGLE = false;\r\n\r\n    export const [toggleCreateEdit, {setToggleCreateEdit}] = \r\n        createReduxModule('createOrEditToggle', CreateEditTOGGLE, {\r\n            setToggleCreateEdit: (store, toggle) => toggle\r\n        });\r\n\r\n// HTTP Request Response OK\r\n\r\n    const HTTPOK = \"No Request Made\";\r\n        \r\n    export const [httpRes, {setHttpRes}] =\r\n        createReduxModule('httpOk', HTTPOK, {\r\n            setHttpRes: (store, toggle) => toggle\r\n        });","import { setInvoice, setToggleViewer, dateFormatter, setDateFormatter } from '../redux/Store.js';\r\n\r\nconst Invoices = ({ listOutput }) => {\r\n\r\n    const invoiceMapping = listOutput.map(item => {\r\n        return (\r\n            <div key={item.id} onClick={() => {setInvoice(item); setToggleViewer(true);}}\r\n                id=\"invoices\" className=\"invoice-outer-container position-relative pointer invoice-trans\">\r\n                <div className=\"invoice-inner-container position-absolute w-100 my-auto mx-auto\">\r\n                    <div className=\"invoice-container-row\">\r\n                        <h3><span>#</span>{item.id}</h3>\r\n                        <h2>{item.clientName}</h2>\r\n                    </div>\r\n                    <div className=\"f-ca\">\r\n                        <div className=\"d-flex flex-column w-50\">\r\n                            <h2>Due {item.paymentDue}</h2>\r\n                            <div className=\"mt-2\">\r\n                                <h4>{item.total}</h4>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"f-ae\">\r\n                            <div className={`payment-button-${item.status} f-c payment-button-container`}>\r\n                                <div className=\"payment-status f-c\">\r\n                                    <div className={`dot-${item.status} payment-dot`}></div>\r\n                                    <h5>{item.status === 'paid' ? `Paid` : item.status === 'pending' ? `Pending` : `Draft`}</h5>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <>\r\n            {invoiceMapping}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Invoices\r\n","export const filterItems = [\r\n    {\r\n        id: 1,\r\n        name: 'Draft',\r\n        checkedValue: 'draftFilter'\r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'Pending',\r\n        checkedValue: 'pendingFilter'\r\n    },\r\n    {\r\n        id: 3,\r\n        name: 'Paid',\r\n        checkedValue: 'paidFilter'\r\n    },\r\n];\r\n","export const optionTerms = [\r\n    {\r\n        id: 1,\r\n        name: 'Net 1 Day',\r\n        days: 1\r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'Net 7 Days',\r\n        days: 7\r\n    },\r\n    {\r\n        id: 3,\r\n        name: 'Net 14 Days',\r\n        days: 7\r\n    },\r\n    {\r\n        id: 4,\r\n        name: 'Net 30 Days',\r\n        days: 30\r\n    }\r\n];","export const Schema = {\r\n    id: \"\",\r\n    createdAt: \"\",\r\n    paymentDue: \"\",\r\n    description: \"\",\r\n    paymentTerms: null,\r\n    clientName: \"\",\r\n    clientEmail: \"\",\r\n    status: \"\",\r\n    senderAddress: {\r\n        street: \"\",\r\n        city: \"\",\r\n        postCode: \"\",\r\n        country: \"\"\r\n    },\r\n    clientAddress: {\r\n        street: \"\",\r\n        city: \"\",\r\n        postCode: \"\",\r\n        country: \"\"\r\n    },\r\n    items: [\r\n        {\r\n            name: \"\",\r\n            quantity: 0,\r\n            price: 0,\r\n            total: 0\r\n        }\r\n    ],\r\n    total: \"\"\r\n}\r\n\r\nexport const ItemAddSchema = \r\n    {\r\n        name: \"\",\r\n        quantity: 0,\r\n        price: 0,\r\n        total: 0\r\n    }","import { useState } from 'react';\r\nimport { optionTerms } from '../Arrays/Options';\r\nimport { Schema, ItemAddSchema } from '../Schema-Invoice';\r\nimport { invoice, \r\n    markPaidInvoice, setToggleDeleteModal, \r\n    setToggleViewer, setToggleCreateEdit } from '../redux/Store.js';\r\n\r\nconst CreateOrEdit = () => {\r\n\r\n    const input = invoice().id === undefined ? Schema : invoice();\r\n\r\n    let itemKeyId = 0;\r\n\r\n    const [invoiceEdit, setInvoiceEdit] = useState(input);\r\n    const [toggleTerms, setToggleTerms] = useState(false);\r\n\r\n    const switchBackEval = () => {\r\n        if (invoice().id === undefined) {\r\n            setToggleCreateEdit(false);\r\n        } else {\r\n            setToggleViewer(true);\r\n            setToggleCreateEdit(false);\r\n        }\r\n    }\r\n\r\n    const backHeader = () => {\r\n        return (\r\n            <div onClick={() => setToggleCreateEdit(false)} \r\n                className=\"back-container pointer position-relative\">\r\n                <div className=\"back-arrow\"></div>\r\n                <div className=\"d-flex\">\r\n                    <h3>Go back</h3>\r\n                </div>\r\n                <div className=\"back-container-filler\"></div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const title = () => {\r\n        return (\r\n            <div className=\"createoredit-title\">\r\n                {invoice().id === undefined ?\r\n                    <h1>New Invoice</h1>\r\n                    : <h1>Edit <span>#</span>{invoiceEdit.id}</h1>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const formStateUpdate = (type, value, indexId) => {\r\n        const data = invoiceEdit;\r\n\r\n        switch (type) {\r\n            case 'senderAddress.street':\r\n                data.senderAddress.street = value;\r\n                break;\r\n            case 'senderAddress.city':\r\n                data.senderAddress.city = value;\r\n                break;\r\n            case 'senderAddress.postCode':\r\n                data.senderAddress.postCode = value;\r\n                break;\r\n            case 'senderAddress.country':\r\n                data.senderAddress.country = value;\r\n                break;\r\n            case 'clientName':\r\n                data.clientName = value;\r\n                break;\r\n            case 'clientEmail':\r\n                data.clientEmail = value;\r\n                break;\r\n            case 'clientAddress.street':\r\n                data.clientAddress.street = value;\r\n                break;\r\n            case 'clientAddress.city':\r\n                data.clientAddress.city = value;\r\n                break;\r\n            case 'clientAddress.postCode':\r\n                data.clientAddress.postCode = value;\r\n                break;\r\n            case 'clientAddress.country':\r\n                data.clientAddress.country = value;\r\n                break;\r\n            case 'createdAt':\r\n                data.clientAddress.createdAt = value;\r\n                break;\r\n            case 'paymentTerms':\r\n                data.paymentTerms = value;\r\n                setToggleTerms(false);\r\n                break;\r\n            case 'description':\r\n                data.description = value;\r\n                break;\r\n            case 'item.name':\r\n                data.items[indexId].name = value;\r\n                break;\r\n            case 'item.quantity':\r\n                data.items[indexId].quantity = value;\r\n                break;\r\n            case 'item.price':\r\n                data.items[indexId].price = Number(value);\r\n                break;\r\n            case 'deleteItem':\r\n                data.items.splice(indexId, 1)\r\n                console.log(data);\r\n                break;\r\n            case 'addItem':\r\n                data.items.push(ItemAddSchema);\r\n            default:\r\n                break;\r\n        }\r\n        setInvoiceEdit({...invoiceEdit, data});\r\n    }\r\n\r\n    const termsMapping = optionTerms.map(option => {\r\n        return (\r\n            <div onClick={() => formStateUpdate('paymentTerms', option.days)}\r\n                key={option.id} className=\"createoredit-option pointer\">\r\n                <h4>{option.name}</h4>\r\n            </div>\r\n        )\r\n    });\r\n\r\n\r\n    const itemsMapping = invoiceEdit.items.map(item => {\r\n\r\n        const itemTotal = (item.quantity * item.price).toFixed(2);\r\n        const indexId = invoiceEdit.items.indexOf(item);\r\n        itemKeyId += 1;\r\n        \r\n        return (\r\n            <div key={itemKeyId} className=\"createoredit-trans-item\">\r\n                <div className=\"createoredit-form-row-full-container f-clb\">\r\n                    <h4>Item Name</h4>\r\n                    <input \r\n                        type=\"text\"\r\n                        name=\"item.name\"\r\n                        value={item.name}\r\n                        onChange={(e) => formStateUpdate(e.target.name, e.target.value, indexId)}                            \r\n                        className=\"createoredit-field\"> \r\n                    </input>\r\n                </div>\r\n                <div className=\"d-flex\">\r\n                    <div className=\"createoredit-form-row-full-container f-clb\">\r\n                        <h4>Qty.</h4>\r\n                        <input \r\n                            type=\"text\"\r\n                            name=\"item.quantity\"\r\n                            value={item.quantity}\r\n                            onChange={(e) => formStateUpdate(e.target.name, e.target.value, indexId)}\r\n                            className=\"createoredit-field\"> \r\n                        </input>\r\n                    </div>\r\n                    <div className=\"createoredit-column-gap\"></div>\r\n                    <div className=\"createoredit-form-row-full-container f-clb\">\r\n                        <h4>Price</h4>\r\n                        <input \r\n                            type=\"text\"\r\n                            name=\"item.price\"\r\n                            value={item.price.toFixed(2)}\r\n                            onChange={(e) => formStateUpdate(e.target.name, e.target.value, indexId)}\r\n                            className=\"createoredit-field\"> \r\n                        </input>\r\n                    </div>\r\n                    <div className=\"createoredit-column-gap\"></div>\r\n                    <div className=\"createoredit-form-row-full-container f-clb\">\r\n                        <h4>Total</h4>\r\n                        <div className=\"createoredit-item-total\">\r\n                            <h4><span>{itemTotal}</span></h4>\r\n                            <div className=\"position-relative\">\r\n                                <div className=\"createoredit-item-trash-icon\"></div>\r\n                                <div \r\n                                    onClick={() => formStateUpdate('deleteItem', item, indexId)}\r\n                                    className=\"createoredit-item-trash-filler pointer\">         \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"createoredit-item-separation-margin\"></div>\r\n            </div>\r\n        )\r\n    });\r\n\r\n    const formBody = () => {\r\n        return (\r\n            <>\r\n                <div className=\"createoredit-bill-top-margin\">\r\n                    <h2>Bill From</h2>\r\n                </div>\r\n                <div className=\"createoredit-form-row-full-container f-clb\">\r\n                    <h4>Street Address</h4>\r\n                    <input \r\n                        type=\"text\"\r\n                        name=\"senderAddress.street\"\r\n                        value={invoiceEdit.senderAddress.street}\r\n                        onChange={(e) => formStateUpdate(e.target.name, e.target.value)}\r\n                        className=\"createoredit-field\">\r\n                    </input>\r\n                </div>\r\n                <div className=\"d-flex\">\r\n                    <div className=\"createoredit-form-row-full-container f-clb\">\r\n                        <h4>City</h4>\r\n                        <input  \r\n                            type=\"text\"\r\n                            name=\"senderAddress.city\"\r\n                            value={invoiceEdit.senderAddress.city}\r\n                            onChange={(e) => formStateUpdate(e.target.name, e.target.value)}\r\n                            className=\"createoredit-field\">\r\n                        </input>\r\n                    </div>\r\n                    <div className=\"createoredit-column-gap\"></div>\r\n                    <div className=\"createoredit-form-row-full-container f-clb\">\r\n                        <h4>Post Code</h4>\r\n                        <input \r\n                            type=\"text\"\r\n                            name=\"senderAddress.postCode\"\r\n                            value={invoiceEdit.senderAddress.postCode}\r\n                            onChange={(e) => formStateUpdate(e.target.name, e.target.value)}\r\n                            className=\"createoredit-field\"> \r\n                            </input>\r\n                    </div>\r\n                </div>\r\n                <div className=\"createoredit-form-row-full-container f-clb\">\r\n                    <h4>Country</h4>\r\n                    <input \r\n                        type=\"text\"\r\n                        name=\"senderAddress.country\"\r\n                        value={invoiceEdit.senderAddress.country}\r\n                        onChange={(e) => formStateUpdate(e.target.name, e.target.value)}\r\n                        className=\"createoredit-field\"> \r\n                    </input>\r\n                </div>\r\n                <div className=\"createoredit-bill-margin\">\r\n                    <h2>Bill To</h2>\r\n                </div>\r\n                <div className=\"createoredit-form-row-full-container f-clb\">\r\n                    <h4>Client's Name</h4>\r\n                    <input  \r\n                        type=\"text\"\r\n                        name=\"clientName\"\r\n                        value={invoiceEdit.clientName}\r\n                        onChange={(e) => formStateUpdate(e.target.name, e.target.value)}\r\n                        className=\"createoredit-field\">\r\n                    </input>\r\n                </div>\r\n                <div className=\"createoredit-form-row-full-container f-clb\">\r\n                    <h4>Client's Email</h4>\r\n                    <input  \r\n                        type=\"text\"\r\n                        name=\"clientEmail\"\r\n                        value={invoiceEdit.clientEmail}\r\n                        onChange={(e) => formStateUpdate(e.target.name, e.target.value)}\r\n                        className=\"createoredit-field\">\r\n                    </input>\r\n                </div>\r\n                <div className=\"createoredit-form-row-full-container f-clb\">\r\n                    <h4>Street Address</h4>\r\n                    <input \r\n                        type=\"text\"\r\n                        name=\"clientAddress.street\"\r\n                        value={invoiceEdit.clientAddress.street}\r\n                        onChange={(e) => formStateUpdate(e.target.name, e.target.value)}\r\n                        className=\"createoredit-field\"> \r\n                    </input>\r\n                </div>\r\n                <div className=\"d-flex\">\r\n                    <div className=\"createoredit-form-row-full-container f-clb\">\r\n                        <h4>City</h4>\r\n                        <input \r\n                            type=\"text\"\r\n                            name=\"clientAddress.city\"\r\n                            value={invoiceEdit.clientAddress.city}\r\n                            onChange={(e) => formStateUpdate(e.target.name, e.target.value)}\r\n                            className=\"createoredit-field\"> \r\n                        </input>\r\n                    </div>\r\n                    <div className=\"createoredit-column-gap\"></div>\r\n                    <div className=\"createoredit-form-row-full-container f-clb\">\r\n                        <h4>Post Code</h4>\r\n                        <input \r\n                            type=\"text\"\r\n                            name=\"clientAddress.postCode\"\r\n                            value={invoiceEdit.clientAddress.postCode}\r\n                            onChange={(e) => formStateUpdate(e.target.name, e.target.value)}\r\n                            className=\"createoredit-field\"> \r\n                        </input>\r\n                    </div>\r\n                </div>\r\n                <div className=\"createoredit-form-row-full-container f-clb\">\r\n                    <h4>Country</h4>\r\n                    <input \r\n                        type=\"text\"\r\n                        name=\"clientAddress.country\"\r\n                        value={invoiceEdit.clientAddress.country}\r\n                        onChange={(e) => formStateUpdate(e.target.name, e.target.value)}\r\n                        className=\"createoredit-field\"> \r\n                    </input>\r\n                </div>\r\n                <div className=\"createoredit-invoice-top-gap\"></div>\r\n                <div className={`${invoice().id === undefined && `d-none`} createoredit-form-row-full-container createoredit-invoice-disabled f-clb`}>\r\n                    <h4>Invoice Date</h4>\r\n                    <div className=\"createoredit-date-disabled f-sb\">\r\n                        <h4><span>{invoiceEdit.createdAt}</span></h4>\r\n                        <div className=\"createoredit-calendar-icon\"></div>\r\n                    </div>   \r\n                </div>\r\n                <div className={`${invoice().id !== undefined && `d-none`} createoredit-form-row-full-container f-clb`}>\r\n                    <h4>Invoice Date</h4>\r\n                    <div className=\"f-sb\">\r\n                        <input \r\n                            type=\"date\"\r\n                            className=\"createoredit-field\"> \r\n                        </input>\r\n                    </div>\r\n                </div>\r\n                <div className=\"position-relative\">\r\n                    <div className=\"createoredit-form-row-full-container f-clb\">\r\n                        <h4>Payment Terms</h4>\r\n                        <div onClick ={() => setToggleTerms(!toggleTerms)} className=\"createoredit-field f-sb pointer\">\r\n                        <span className={`${invoiceEdit.paymentTerms !== null && `d-none`}`}>\r\n                                Select Payment Status\r\n                            </span>\r\n                            <span className={`${invoiceEdit.paymentTerms === null && `d-none`}`}>\r\n                                Net {invoiceEdit.paymentTerms} Day{invoiceEdit.paymentTerms > 1 ? 's' : ''}\r\n                            </span>\r\n                            <div className=\"f-c\">\r\n                                <div className={`${toggleTerms \r\n                                    && `createoredit-option-arrow-clicked`} createoredit-option-arrow`}></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={`${toggleTerms ? `createoredit-option-trans` : `d-none`} position-absolute w-100`}>\r\n                        {termsMapping}\r\n                    </div>\r\n                </div>\r\n                <div className=\"createoredit-form-row-full-container f-clb\">\r\n                    <h4>Project / Description</h4>\r\n                    <input \r\n                        type=\"text\"\r\n                        name=\"description\"\r\n                        value={invoiceEdit.description}\r\n                        onChange={(e) => formStateUpdate(e.target.name, e.target.value)}\r\n                        className=\"createoredit-field\"> \r\n                    </input>\r\n                </div>\r\n                <div className=\"createoredit-item-list-container\">\r\n                    <h5>Item List</h5>\r\n                    {itemsMapping}\r\n                </div>\r\n                <div \r\n                    onClick={() => formStateUpdate('addItem')}\r\n                    className={`${invoiceEdit.items.length === 0 \r\n                        && `createoredit-item-empty-button-gap`} \r\n                        createoredit-item-add-button pointer f-c`}>\r\n                    <h4>+ Add New Item</h4>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const footerButtons = () => { \r\n        return (\r\n            <div className=\"createoredit-footer-outer-container f-c\">\r\n                <div className=\"createoredit-footer-inner-container f-e f-c\">\r\n                    <div onClick={() => setToggleCreateEdit(false)}\r\n                        className={`${invoice().id === undefined && `d-none`} createoredit-cancel-button-container f-c pointer`}>\r\n                            <h3>Cancel</h3>\r\n                    </div>\r\n                    <div onClick={() => setToggleCreateEdit(false)}\r\n                        className={`${invoice().id !== undefined && `d-none`} createoredit-cancel-button-container f-c pointer`}>\r\n                            <h3>Discard</h3>\r\n                    </div>\r\n                    <div className={`${invoice().id !== undefined && `d-none`} createoredit-footer-button-gap`}></div>\r\n                    <div\r\n                        className={`${invoice().id !== undefined && `d-none`} createoredit-saveasdraft-button-container f-c`}>\r\n                            <h3>Save as Draft</h3>\r\n                    </div>\r\n                    <div className=\"createoredit-footer-button-gap\"></div>\r\n                    <div className={`${invoice().id === undefined && `d-none`} createoredit-savechanges-button-container f-c`}>\r\n                        <h3>Save Changes</h3>\r\n                    </div>\r\n                    <div className={`${invoice().id !== undefined && `d-none`} createoredit-saveandsend-button-container f-c`}>\r\n                        <h3>Save & Send</h3>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div id=\"createoredit\">\r\n            <div className=\"createoredit-container\">\r\n                {backHeader()}\r\n                <div className=\"createoredit-transition\">\r\n                    {title()}\r\n                    {formBody()}\r\n                </div>\r\n            </div>\r\n            <div className=\"createoredit-bottom-filler\"></div>\r\n            {footerButtons()}   \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateOrEdit\r\n","import { nightMode, toggleNightMode } from '../redux/Store.js';\r\n\r\nconst Header = () => {\r\n\r\n    const reload = () => {\r\n        window.location.reload();\r\n    }\r\n\r\n    return (\r\n        <div id=\"header\" className=\"d-flex flex-row flex-xl-column align-items-center justify-content-between\">\r\n            <div className=\"logo-container f-c\">\r\n                <div onClick={() => reload()}className=\"logo pointer\"></div>\r\n            </div>\r\n            <div className=\"f-c flex-row flex-xl-column\">\r\n                <div onClick={() => toggleNightMode()} className=\"f-c switch-container\" >\r\n                    <div className={`${nightMode() ? `theme-night` : `theme-day`} theme pointer`}></div>\r\n                </div>\r\n                <div className=\"avatar-container f-c pointer\">\r\n                    <div className=\"avatar-image\"></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nconst ButtonReqSpinner = () => {\r\n    return (\r\n        <div id=\"buttonReqSpinner\" className=\"position-absolute f-c\">\r\n            <div className=\"lds-ellipsis\">\r\n                <div></div><div></div>\r\n                <div></div><div></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ButtonReqSpinner\r\n","import ButtonReqSpinner from './ButtonReqSpinner';\r\nimport { invoice, setToggleViewer, setToggleerrorModal, \r\n    errorInvoice, httpRes, setHttpRes,\r\n    toggleSpinner, setToggleSpinner, setToggleErrorModal } from '../redux/Store.js';\r\n\r\nconst ErrorModal = () => {\r\n\r\n    return (\r\n        <div id=\"errorModal\" className=\"d-flex align-items-stretch\">\r\n            <div className=\"error-modal-page-container f-c error-fill-transition\">\r\n                <div className=\"error-modal-outer-container error-modal-transition\">\r\n                    <div className=\"error-modal-inner-container\">\r\n                        <h1>Error</h1>\r\n                        <div className=\"error-modal-content-spacing\">\r\n                            <h2>Your changes were not able to be saved.  Please \r\n                            try again.</h2>\r\n                        </div>\r\n                        <div className=\"f-ae\">\r\n                            <div onClick={() => setToggleErrorModal(false)}\r\n                                className=\"error-modal-ok-button-container f-c pointer\">\r\n                                <h3>Ok</h3>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorModal\r\n","import Loading from './Loading';\r\nimport ButtonReqSpinner from './ButtonReqSpinner';\r\nimport { useState, useEffect } from 'react';\r\nimport { invoice, \r\n    markPaidInvoice, setToggleDeleteModal, \r\n    setToggleViewer, setToggleCreateEdit,\r\n    httpRes, setHttpRes, setToggleErrorModal, initInvoices } from '../redux/Store.js';\r\n\r\nconst Viewer = () => {\r\n    \r\n    const [viewInvoice, setViewInvoice] = useState(invoice());\r\n    const [markPaidSpinner, setMarkPaidSpinner] = useState(false);\r\n\r\n    if (httpRes() === \"Mark Paid Request Failed\") {\r\n        setTimeout(() => {\r\n            setToggleErrorModal(true);\r\n        }, 500);\r\n    } else if (httpRes() === \"Mark Paid Request Fulfilled\") {\r\n        setTimeout(() => {\r\n            setViewInvoice({...viewInvoice, status: 'paid'});\r\n        }, 500); \r\n    }\r\n\r\n    const markPaid = () => {\r\n        setMarkPaidSpinner(true);\r\n        setHttpRes(\"Mark Paid Request Pending\");\r\n        markPaidInvoice(viewInvoice.id);\r\n    }\r\n\r\n    const backHeader = () => {\r\n        return (\r\n            <div onClick={() => setToggleViewer(false)} \r\n                className=\"back-container pointer position-relative\">\r\n                <div className=\"back-arrow\"></div>\r\n                <div className=\"d-flex\">\r\n                    <h3>Go back</h3>\r\n                </div>\r\n                <div className=\"back-container-filler\"></div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const statusContainer = () => {\r\n        return (\r\n            <div className=\"viewer-status-outer-container\">\r\n                <div className=\"viewer-status-inner-container\">\r\n                    <div className=\"f-ca\">\r\n                        <h2>Status</h2>\r\n                        <div className={`payment-button-${viewInvoice.status} f-c payment-button-container`}>\r\n                            <div className=\"payment-status f-c\">\r\n                                <div className={`dot-${viewInvoice.status} payment-dot`}></div>\r\n                                <h5>{viewInvoice.status === 'paid' ? `Paid` : viewInvoice.status === 'pending' ? `Pending` : `Draft`}</h5>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    let grandTotal = 0;\r\n\r\n    const priceItemsMapping = viewInvoice.items.map(item => {\r\n\r\n        const calculateItemTotal = (item) => {\r\n            const numberTotal = (item.quantity * item.price);\r\n            grandTotal = grandTotal + numberTotal;\r\n            const total = `£ ${numberTotal.toFixed(2)}`;\r\n            return total;\r\n        }\r\n        return (\r\n            <div key={item.name} className=\"viewer-main-pricing-item-container f-sb\">\r\n                <div className=\"f-clb\">\r\n                    <h3>{item.name}</h3>\r\n                    <h3><span>{`${item.quantity} x £ ${item.price.toFixed(2)}`}</span></h3>\r\n                </div>\r\n                <div className=\"f-c\">\r\n                    <h3>{calculateItemTotal(item)}</h3>\r\n                </div>\r\n            </div> \r\n        );\r\n    });\r\n\r\n    const mainContainer = () => {\r\n        return (\r\n            <div className=\"viewer-main-outer-container\">\r\n                <div className=\"viewer-main-inner-container\">\r\n                    <div className=\"viewer-main-full-span-container f-ca\">\r\n                        <div className=\"viewer-main-left-column-container\">\r\n                            <div className=\"viewer-main-id-subscription-container f-clb\">\r\n                                <h3><span>#</span>{viewInvoice.id}</h3>\r\n                                <h2>{viewInvoice.description}</h2>\r\n                            </div>\r\n                            <div className=\"viewer-main-address-container f-clb\">\r\n                                <h6>{viewInvoice.senderAddress.street}</h6>\r\n                                <h6>{viewInvoice.senderAddress.city}</h6>\r\n                                <h6>{viewInvoice.senderAddress.postCode}</h6>\r\n                                <h6>{viewInvoice.senderAddress.country}</h6>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"viewer-main-right-column-container\"></div>\r\n                    </div>\r\n                    <div className=\"viewer-main-full-span-container f-ca\">\r\n                        <div className=\"viewer-main-left-column-container\">   \r\n                            <div className=\"viewer-main-invoice-container f-clb\">\r\n                                <h2>Invoice Date</h2>\r\n                                <p>{viewInvoice.createdAt}</p>\r\n                            </div>\r\n                            <div className=\"viewer-main-due-container f-clb\">\r\n                                <h2>Payment Due</h2>\r\n                                <p>{viewInvoice.paymentDue}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"viewer-main-right-column-container\">\r\n                            <div className=\"viewer-main-bill-container f-clb\">\r\n                                <h2>Bill To</h2>\r\n                                <p>{viewInvoice.clientName}</p>\r\n                            </div>\r\n                            <div className=\"viewer-main-bill-address-outer-container\">\r\n                                <div className=\"viewer-main-bill-address-inner-container f-sb flex-column\">\r\n                                    <h6>{viewInvoice.clientAddress.street}</h6>\r\n                                    <h6>{viewInvoice.clientAddress.city}</h6>\r\n                                    <h6>{viewInvoice.clientAddress.postCode}</h6>\r\n                                    <h6>{viewInvoice.clientAddress.country}</h6>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"viewer-main-full-span-container f-ca\">\r\n                        <div className=\"viewer-main-left-column-container\">\r\n                            <div className=\"viewer-main-sent-outer-container\">\r\n                                <div className=\"viewer-main-sent-inner-container f-clb\">\r\n                                    <h2>Sent to</h2>\r\n                                    <p>{viewInvoice.clientEmail}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"viewer-main-right-column-container\"></div>\r\n                    </div>\r\n                    <div className=\"viewer-main-pricing-outer-container\">\r\n                        <div className=\"viewer-main-pricing-inner-container\">\r\n                            {priceItemsMapping}\r\n                        </div>\r\n                        <div className=\"viewer-main-pricing-grand-total-outer-container\">\r\n                            <div className=\"viewer-main-pricing-grand-total-inner-container\">\r\n                                <div className=\"f-ca\">\r\n                                    <h6> Amount Due</h6>\r\n                                    <h1>{`£ ${grandTotal.toFixed(2)}`}</h1>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>  \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const buttonsFooter = () => {\r\n        return (\r\n            <div className=\"viewer-footer-outer-container\">\r\n                <div className=\"viewer-footer-inner-container f-e\">\r\n                    <div onClick={() => {setToggleCreateEdit(true); setToggleViewer(false)}} \r\n                        className=\"viewer-footer-edit-button-container f-c pointer\">\r\n                        <h3>Edit</h3>\r\n                    </div>\r\n                    <div className=\"viewer-footer-button-gap\"></div>\r\n                    <div onClick={() => setToggleDeleteModal(true)} className=\"viewer-footer-delete-button-container f-c pointer\">\r\n                        <h3>Delete</h3>\r\n                    </div>\r\n                    <div className={viewInvoice.status === 'paid' || viewInvoice.status === 'draft'\r\n                        ? `d-none` : `viewer-footer-button-gap`}></div>\r\n                    <div onClick={() => markPaid()} \r\n                        className={`${viewInvoice.status === 'paid' || viewInvoice.status === 'draft' ? `d-none` : ``} \r\n                            viewer-footer-paid-button-container f-c pointer position-relative`}>\r\n                        {markPaidSpinner ? <ButtonReqSpinner /> : <h3>Mark as Paid</h3>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div id=\"viewer\">\r\n            <div className=\"viewer-container\">\r\n                {backHeader()} \r\n                <div className=\"viewer-transition\">  \r\n                    {statusContainer()}   \r\n                    {mainContainer()}  \r\n                </div>  \r\n            </div>\r\n            {buttonsFooter()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Viewer\r\n","import { useState, useEffect } from 'react';\r\nimport ButtonReqSpinner from './ButtonReqSpinner';\r\nimport { invoice, setToggleViewer, setToggleDeleteModal, \r\n    deleteInvoice, httpRes, setHttpRes, setToggleErrorModal,\r\n    setToggleCreateEdit, initInvoices, invoiceList } from '../redux/Store.js';\r\n\r\nconst DeleteModal = () => {\r\n\r\n    const deletingId = invoice().id;\r\n\r\n    const [deleteSpinner, setDeleteSpinner] = useState(false);\r\n\r\n    if (httpRes() === \"Delete Request Failed\") {\r\n        setTimeout(() => {\r\n            setToggleDeleteModal(false);\r\n            setToggleErrorModal(true);\r\n        }, 500);\r\n    } else if (httpRes() === \"Delete Request Fulfilled\") {\r\n        setTimeout(() => {\r\n            setToggleDeleteModal(false);\r\n        setToggleViewer(false);\r\n        }, 500);\r\n    }\r\n\r\n    const confirmDelete = () => {\r\n        setDeleteSpinner(true);   \r\n        setHttpRes(\"Delete Request Pending\");\r\n        deleteInvoice(deletingId); \r\n    }\r\n\r\n    return (\r\n        <div id=\"deleteModal\" className=\"d-flex align-items-stretch\">\r\n            <div className=\"delete-modal-page-container f-c delete-fill-transition\">\r\n                <div className=\"delete-modal-outer-container delete-modal-transition\">\r\n                    <div className=\"delete-modal-inner-container\">\r\n                        <h1>Confirm Deletion</h1>\r\n                        <div className=\"delete-modal-content-spacing\">\r\n                            <h2>Are you sure you want to delete invoice\r\n                            #{deletingId}? This action cannot be undone.</h2>\r\n                        </div>\r\n                        <div className=\"f-ae\">\r\n                            <div onClick={() => setToggleDeleteModal(false)}\r\n                                className=\"delete-modal-cancel-button-container f-c pointer\">\r\n                                <h3>Cancel</h3>\r\n                            </div>\r\n                            <div className=\"delete-modal-button-gap\"></div>\r\n                            <div onClick={() => confirmDelete()} \r\n                                className=\"delete-modal-delete-button-container f-c pointer position-relative\">\r\n                                {deleteSpinner ? <ButtonReqSpinner /> : <h3>Delete</h3>} \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DeleteModal\r\n","import CreateOrEdit from './components/CreateOrEdit';\r\nimport Header from './components/Header';\r\nimport List from './components/List';\r\nimport ErrorModal from './components/ErrorModal';\r\nimport Formatter from './components/List';\r\nimport Viewer from './components/Viewer';\r\nimport DeleteModal from './components/DeleteModal';\r\nimport './App.scss';\r\nimport { fetchData, initInvoices, nightMode, \r\n  toggleViewer, toggleCreateEdit, toggleDeleteModal,\r\n  toggleErrorModal, setToggleErrorModal, setToggleDeleteModal, \r\n  setToggleViewer, setToggleCreateEdit, httpRes } from './redux/Store.js';\r\nimport { useState } from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\n\r\nconst App = () => {\r\n\r\n  console.log(httpRes());\r\n\r\n  const [fetchedList, setFetchedList] = useState([\"loading\"]);\r\n  const [toggleFormat, setToggleFormat] = useState(false);\r\n\r\n  const getInvoices = async () => {\r\n    const data = await fetchData;\r\n    if (data[0] === \"error\") {\r\n      console.log(\"Failed To Load Invoices\")\r\n      initInvoices(data);\r\n    } else {\r\n      setFetchedList(data);\r\n    }\r\n  }\r\n\r\n  getInvoices();\r\n\r\n  const listFormatter = () => {\r\n    if (fetchedList[0] === \"loading\") {\r\n      return fetchedList;\r\n    } else {\r\n      const monthsArray =['Jan', 'Feb', 'Mar', 'Apr', 'May', 'June', 'July',\r\n        'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n\r\n      const dateFormat = (input) => {\r\n        const day= input.slice(8, 10);\r\n        let month = monthsArray[Number(input.slice(5, 7)) - 1];\r\n        const year = input.slice(0, 4);\r\n        const formatted = `${day} ${month} ${year}`;\r\n        return formatted;\r\n      }\r\n\r\n      const currencyFormat = (amount) => {\r\n        const output = `£ ${new Intl.NumberFormat ('en-UK', { style: 'currency', currency: 'GBP'}).format(amount).toString().slice(1)}`;\r\n        return output;\r\n      }\r\n\r\n      const formattedList = [];\r\n\r\n      fetchedList.forEach(invoice => {\r\n        formattedList.push({...invoice, \r\n          createdAt: dateFormat(invoice.createdAt), \r\n          paymentDue: dateFormat(invoice.paymentDue), \r\n          total: currencyFormat(invoice.total) \r\n        })\r\n      });\r\n\r\n      initInvoices(formattedList);\r\n      setToggleFormat(true);\r\n    }\r\n  }\r\n\r\n  !toggleFormat && listFormatter();\r\n\r\n  const createToggle = toggleCreateEdit();\r\n  const viewerToggle = toggleViewer();\r\n\r\n  const invoiceSwitch = () => {\r\n    return createToggle ? <CreateOrEdit />\r\n      : viewerToggle ? <Viewer /> : <List /> \r\n  }\r\n\r\n  return (\r\n    <div className={`${nightMode() ? 'night-mode' : 'day-mode'} window-height position-relative`}>\r\n      <div className=\"d-flex flex-column flex-xl-row\">\r\n        <Header />\r\n        {toggleErrorModal() && <ErrorModal />}\r\n        {toggleDeleteModal() && <DeleteModal />}\r\n        {invoiceSwitch()}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'hooks-for-redux';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}